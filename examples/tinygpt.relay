#[version = "0.0.5"]
[def @main(%input_ids: Tensor[(?, ?), int64] /* ty=Tensor[(?, ?), int64] span=/transformer/Shape.input_ids:0:0 */, %attention_mask: Tensor[(?, ?), int64] /* ty=Tensor[(?, ?), int64] span=/transformer/Reshape_2.attention_mask:0:0 */) -> (Tensor[(?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32]) {
  %0 = shape_of(%input_ids, dtype="int64") /* ty=Tensor[(2), int64] span=/transformer/Shape_1:0:0 */;
  %1 = take(%0, 1i64 /* ty=int64 span=/transformer/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/Gather_1:0:0 */;
  %2 = expand_dims(%1, axis=0) /* ty=Tensor[(1), int64] span=/transformer/Unsqueeze:0:0 */;
  %3 = (meta[relay.Constant][16] /* ty=Tensor[(1), int64] span=/transformer/Constant_2:0:0 */, %2) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/Concat:0:0 */;
  %4 = concatenate(%3) /* ty=Tensor[(2), int64] span=/transformer/Concat:0:0 */;
  %5 = dyn.reshape(%input_ids, %4, newshape=[]) /* ty=Tensor[(?, ?), int64] span=/transformer/Reshape:0:0 */;
  %6 = less(%5, 0i64 /* ty=int64 span=/transformer/wte/Gather:0:0 */) /* ty=Tensor[(?, ?), bool] span=/transformer/wte/Gather:0:0 */;
  %7 = add(%5, 1000i64 /* ty=int64 span=/transformer/wte/Gather:0:0 */) /* ty=Tensor[(?, ?), int64] span=/transformer/wte/Gather:0:0 */;
  %8 = where(%6, %7, %5) /* ty=Tensor[(?, ?), int64] span=/transformer/wte/Gather:0:0 */;
  %9 = cast(%1, dtype="int64") /* ty=int64 span=/transformer/Cast:0:0 */;
  %10 = arange(0i64 /* ty=int64 span=/transformer/Constant_5:0:0 */, %9, 1i64 /* ty=int64 span=/transformer/Constant_6:0:0 */, start=meta[relay.Constant][18], stop=meta[relay.Call][0], step=meta[relay.Constant][19], dtype="int64") /* ty=Tensor[(?), int64] span=/transformer/Range:0:0 */;
  %11 = expand_dims(%1, axis=0) /* ty=Tensor[(1), int64] span=/transformer/Unsqueeze_1:0:0 */;
  %12 = (meta[relay.Constant][20] /* ty=Tensor[(1), int64] span=/transformer/Constant_3:0:0 */, %11) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/Concat_1:0:0 */;
  %13 = expand_dims(%10, axis=0) /* ty=Tensor[(1, ?), int64] span=/transformer/Unsqueeze_2:0:0 */;
  %14 = concatenate(%12) /* ty=Tensor[(2), int64] span=/transformer/Concat_1:0:0 */;
  %15 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?), int64] span=/transformer/Reshape_1:0:0 */;
  %16 = less(%15, 0i64 /* ty=int64 span=/transformer/wpe/Gather:0:0 */) /* ty=Tensor[(?, ?), bool] span=/transformer/wpe/Gather:0:0 */;
  %17 = add(%15, 512i64 /* ty=int64 span=/transformer/wpe/Gather:0:0 */) /* ty=Tensor[(?, ?), int64] span=/transformer/wpe/Gather:0:0 */;
  %18 = where(%16, %17, %15) /* ty=Tensor[(?, ?), int64] span=/transformer/wpe/Gather:0:0 */;
  %19 = take(meta[relay.Constant][15] /* ty=Tensor[(1000, 32), float32] span=/transformer/wte/Gather.transformer.wte.weight:0:0 */, %8, axis=0) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/wte/Gather:0:0 */;
  %20 = take(meta[relay.Constant][17] /* ty=Tensor[(512, 32), float32] span=/transformer/wpe/Gather.transformer.wpe.weight:0:0 */, %18, axis=0) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/wpe/Gather:0:0 */;
  %21 = add(%19, %20) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/Add:0:0 */;
  %22 = mean(%21, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_1/ReduceMean:0:0 */;
  %23 = subtract(%21, %22) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_1/Sub:0:0 */;
  %24 = power(%23, 2f /* ty=float32 span=/transformer/h.0/ln_1/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_1/Pow:0:0 */;
  %25 = mean(%24, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_1/ReduceMean_1:0:0 */;
  %26 = add(%25, 1e-05f /* ty=float32 span=/transformer/h.0/ln_1/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_1/Add:0:0 */;
  %27 = sqrt(%26) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_1/Sqrt:0:0 */;
  %28 = divide(%23, %27) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_1/Div:0:0 */;
  %29 = multiply(%28, meta[relay.Constant][21] /* ty=Tensor[(32), float32] span=Identity_1.transformer.h.0.ln_1.weight:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_1/Mul:0:0 */;
  %30 = add(%29, meta[relay.Constant][22] /* ty=Tensor[(32), float32] span=Identity_0.transformer.h.0.ln_1.bias:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_1/Add_1:0:0 */;
  %31 = shape_of(%30, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_attn/Shape_2:0:0 */;
  %32 = strided_slice(%31, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_attn/Slice:0:0 */;
  %33 = squeeze(%32, axis=[0]) /* ty=int64 span=/transformer/h.0/attn/c_attn/Squeeze:0:0 */;
  %34 = expand_dims(%33, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_attn/Unsqueeze:0:0 */;
  %35 = (meta[relay.Constant][23] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_attn/Constant_6:0:0 */, %34) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/c_attn/Concat:0:0 */;
  %36 = concatenate(%35) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/c_attn/Concat:0:0 */;
  %37 = dyn.reshape(%30, %36, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.0/attn/c_attn/Reshape:0:0 */;
  %38 = nn.dense(%37, meta[relay.Constant][24] /* ty=Tensor[(96, ?), float32] span=/transformer/h.0/attn/c_attn/Gemm:0:0 */, units=96) /* ty=Tensor[(?, 96), float32] span=/transformer/h.0/attn/c_attn/Gemm:0:0 */;
  %39 = shape_of(%30, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_attn/Shape:0:0 */;
  %40 = take(%39, 0i64 /* ty=int64 span=/transformer/h.0/attn/c_attn/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/c_attn/Gather:0:0 */;
  %41 = shape_of(%30, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_attn/Shape_1:0:0 */;
  %42 = take(%41, 1i64 /* ty=int64 span=/transformer/h.0/attn/c_attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/c_attn/Gather_1:0:0 */;
  %43 = expand_dims(%40, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_attn/Unsqueeze_1:0:0 */;
  %44 = expand_dims(%42, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_attn/Unsqueeze_2:0:0 */;
  %45 = (%43, %44, meta[relay.Constant][26] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_attn/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/c_attn/Concat_1:0:0 */;
  %46 = add(%38, meta[relay.Constant][25] /* ty=Tensor[(96), float32] span=Identity_7.transformer.h.0.attn.c_attn.bias:0:0 */) /* ty=Tensor[(?, 96), float32] span=/transformer/h.0/attn/c_attn/Gemm:0:0 */;
  %47 = concatenate(%45) /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_attn/Concat_1:0:0 */;
  %48 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/c_attn/Reshape_1:0:0 */;
  %49 = split(%48, indices_or_sections=[32i64, 64i64], axis=2) /* ty=(Tensor[(?, ?, 32), float32], Tensor[(?, ?, 32), float32], Tensor[(?, ?, ?), float32]) span=/transformer/h.0/attn/Split:0:0 */;
  %50 = %49.1 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/attn/Split:0:0 */;
  %51 = shape_of(%50, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/Shape_2:0:0 */;
  %52 = take(%51, 0i64 /* ty=int64 span=/transformer/h.0/attn/Constant_5:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather_2:0:0 */;
  %53 = shape_of(%50, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/Shape_3:0:0 */;
  %54 = take(%53, 1i64 /* ty=int64 span=/transformer/h.0/attn/Constant_6:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather_3:0:0 */;
  %55 = expand_dims(%52, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_2:0:0 */;
  %56 = expand_dims(%54, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_3:0:0 */;
  %57 = (%55, %56, meta[relay.Constant][27] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Constant_7:0:0 */, meta[relay.Constant][28] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Constant_8:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/Concat_1:0:0 */;
  %58 = concatenate(%57) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Concat_1:0:0 */;
  %59 = dyn.reshape(%50, %58, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Reshape_1:0:0 */;
  %60 = transpose(%59, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Transpose_1:0:0 */;
  %61 = shape_of(%60, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Shape_8:0:0 */;
  %62 = strided_slice(%61, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Slice_2:0:0 */;
  %63 = %49.0 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/attn/Split:0:0 */;
  %64 = shape_of(%63, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/Shape:0:0 */;
  %65 = take(%64, 0i64 /* ty=int64 span=/transformer/h.0/attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather:0:0 */;
  %66 = shape_of(%63, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/Shape_1:0:0 */;
  %67 = take(%66, 1i64 /* ty=int64 span=/transformer/h.0/attn/Constant_2:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather_1:0:0 */;
  %68 = expand_dims(%65, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze:0:0 */;
  %69 = expand_dims(%67, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_1:0:0 */;
  %70 = (%68, %69, meta[relay.Constant][29] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Constant_3:0:0 */, meta[relay.Constant][30] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Constant_4:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/Concat:0:0 */;
  %71 = concatenate(%70) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Concat:0:0 */;
  %72 = dyn.reshape(%63, %71, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Reshape:0:0 */;
  %73 = transpose(%72, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Transpose:0:0 */;
  %74 = shape_of(%73, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Shape_7:0:0 */;
  %75 = strided_slice(%74, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Slice_1:0:0 */;
  %76 = squeeze(%62, axis=[0]) /* ty=int64 span=/transformer/h.0/attn/Squeeze_2:0:0 */;
  %77 = squeeze(%75, axis=[0]) /* ty=int64 span=/transformer/h.0/attn/Squeeze_1:0:0 */;
  %78 = subtract(%76, %77) /* ty=int64 span=/transformer/h.0/attn/Sub:0:0 */;
  %79 = expand_dims(%78, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_6:0:0 */;
  %80 = scatter_elements(meta[relay.Constant][13] /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */, meta[relay.Constant][14] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Slice_3:0:0 */, %79) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %81 = cast_like(0 /* ty=int32 span=/transformer/h.0/attn/Slice_3:0:0 */, %80) /* ty=int64 span=/transformer/h.0/attn/Slice_3:0:0 */;
  %82 = cast_like(meta[relay.Constant][31] /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_3:0:0 */, %80) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %83 = slice_like(%82, %80, axes=None) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %84 = less(%80, %81) /* ty=Tensor[(4), bool] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %85 = add(%80, %83) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %86 = where(%84, %85, %80) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %87 = greater_equal(%86, %83) /* ty=Tensor[(4), bool] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %88 = expand_dims(%76, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_7:0:0 */;
  %89 = where(%87, %83, %86) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %90 = scatter_elements(meta[relay.Constant][32] /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */, meta[relay.Constant][14] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Slice_3:0:0 */, %88) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %91 = dyn.strided_slice(meta[relay.Constant][12] /* ty=Tensor[(1, 1, 512, 512), uint8] span=Identity_8.transformer.h.0.attn.bias:0:0 */, %89, %90, meta[relay.Constant][33] /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_3:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.0/attn/Slice_3:0:0 */;
  %92 = shape_of(%91, dtype="int32") /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %93 = cast_like(%92, meta[relay.Constant][35] /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %94 = slice_like(%93, meta[relay.Constant][35] /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */, axes=None) /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %95 = add(meta[relay.Constant][35] /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */, %94) /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %96 = where(meta[relay.Constant][34] /* ty=Tensor[(4), bool] span=/transformer/h.0/attn/Slice_4:0:0 */, %95, meta[relay.Constant][35] /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %97 = greater_equal(%96, %94) /* ty=Tensor[(4), bool] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %98 = shape_of(%91, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %99 = expand_dims(%76, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_8:0:0 */;
  %100 = where(%97, %94, %96) /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %101 = scatter_elements(%98, meta[relay.Constant][36] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Slice_4:0:0 */, %99) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %102 = dyn.strided_slice(%91, %100, %101, meta[relay.Constant][37] /* ty=Tensor[(4), int32] span=/transformer/h.0/attn/Slice_4:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.0/attn/Slice_4:0:0 */;
  %103 = transpose(%59, axes=[0, 2, 3, 1]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Transpose_3:0:0 */;
  %104 = shape_of(%103, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %105 = shape_of(%73, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %106 = strided_slice(%104, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %107 = strided_slice(%105, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %108 = strided_slice(%104, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %109 = strided_slice(%105, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %110 = maximum(%106, %107) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %111 = maximum(%108, %109) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %112 = (%110, %111) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/MatMul:0:0 */;
  %113 = concatenate(%112) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %114 = strided_slice(%105, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %115 = (%113, %114) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul:0:0 */;
  %116 = concatenate(%115) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %117 = dyn.broadcast_to(%73, %116, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/MatMul:0:0 */;
  %118 = shape_of(%117, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %119 = strided_slice(%118, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %120 = (meta[relay.Constant][38] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */, %119) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul:0:0 */;
  %121 = concatenate(%120) /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %122 = strided_slice(%104, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %123 = (%113, %122) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul:0:0 */;
  %124 = concatenate(%123) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %125 = dyn.broadcast_to(%103, %124, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/MatMul:0:0 */;
  %126 = shape_of(%125, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %127 = strided_slice(%126, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %128 = (meta[relay.Constant][39] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */, %127) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul:0:0 */;
  %129 = concatenate(%128) /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %130 = dyn.reshape(%125, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul:0:0 */;
  %131 = dyn.reshape(%117, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul:0:0 */;
  %132 = transpose(%130, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul:0:0 */;
  %133 = strided_slice(%105, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %134 = strided_slice(%104, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %135 = (%113, %133, %134) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/MatMul:0:0 */;
  %136 = nn.batch_matmul(%131, %132, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul:0:0 */;
  %137 = concatenate(%135) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul:0:0 */;
  %138 = %49.2 /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/Split:0:0 */;
  %139 = shape_of(%138, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/Shape_4:0:0 */;
  %140 = take(%139, 0i64 /* ty=int64 span=/transformer/h.0/attn/Constant_9:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather_4:0:0 */;
  %141 = shape_of(%138, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/Shape_5:0:0 */;
  %142 = take(%141, 1i64 /* ty=int64 span=/transformer/h.0/attn/Constant_10:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather_5:0:0 */;
  %143 = expand_dims(%140, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_4:0:0 */;
  %144 = expand_dims(%142, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_5:0:0 */;
  %145 = (%143, %144, meta[relay.Constant][40] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Constant_11:0:0 */, meta[relay.Constant][41] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Constant_12:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/Concat_2:0:0 */;
  %146 = concatenate(%145) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Concat_2:0:0 */;
  %147 = dyn.reshape(%138, %146, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Reshape_2:0:0 */;
  %148 = transpose(%147, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Transpose_2:0:0 */;
  %149 = shape_of(%148, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Shape_6:0:0 */;
  %150 = strided_slice(%149, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Slice:0:0 */;
  %151 = squeeze(%150, axis=[0]) /* ty=int64 span=/transformer/h.0/attn/Squeeze:0:0 */;
  %152 = cast(%151, dtype="float32") /* ty=float32 span=/transformer/h.0/attn/Cast:0:0 */;
  %153 = power(%152, 0.5f /* ty=float32 span=/transformer/h.0/attn/Constant_17:0:0 */) /* ty=float32 span=/transformer/h.0/attn/Pow:0:0 */;
  %154 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/MatMul:0:0 */;
  %155 = add(0f /* ty=float32 span=/transformer/h.0/attn/ConstantOfShape:0:0 */, %153) /* ty=float32 span=/transformer/h.0/attn/Add:0:0 */;
  %156 = cast(%102, dtype="bool") /* ty=Tensor[(?, ?, ?, ?), bool] span=/transformer/h.0/attn/Cast_1:0:0 */;
  %157 = divide(%154, %155) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Div:0:0 */;
  %158 = shape_of(%5, dtype="int64") /* ty=Tensor[(2), int64] span=/transformer/Shape_2:0:0 */;
  %159 = take(%158, 0i64 /* ty=int64 span=/transformer/Constant_4:0:0 */, axis=0) /* ty=int64 span=/transformer/Gather_2:0:0 */;
  %160 = expand_dims(%159, axis=0) /* ty=Tensor[(1), int64] span=/transformer/Unsqueeze_3:0:0 */;
  %161 = (%160, meta[relay.Constant][42] /* ty=Tensor[(1), int64] span=/transformer/Constant_8:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/Concat_2:0:0 */;
  %162 = concatenate(%161) /* ty=Tensor[(2), int64] span=/transformer/Concat_2:0:0 */;
  %163 = dyn.reshape(%attention_mask, %162, newshape=[]) /* ty=Tensor[(?, ?), int64] span=/transformer/Reshape_2:0:0 */;
  %164 = expand_dims(%163, axis=1) /* ty=Tensor[(?, 1, ?), int64] span=/transformer/Unsqueeze_4:0:0 */;
  %165 = expand_dims(%164, axis=2) /* ty=Tensor[(?, 1, 1, ?), int64] span=/transformer/Unsqueeze_5:0:0 */;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(?, 1, 1, ?), float32] span=/transformer/Cast_1:0:0 */;
  %167 = subtract(1f /* ty=float32 span=/transformer/Constant_11:0:0 */, %166) /* ty=Tensor[(?, 1, 1, ?), float32] span=/transformer/Sub:0:0 */;
  %168 = where(%156, %157, -3.40282e+38f /* ty=float32 span=Constant_220:0:0 */) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Where:0:0 */;
  %169 = multiply(%167, -3.40282e+38f /* ty=float32 span=/transformer/Constant_12:0:0 */) /* ty=Tensor[(?, 1, 1, ?), float32] span=/transformer/Mul:0:0 */;
  %170 = add(%168, %169) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Add_1:0:0 */;
  %171 = nn.softmax(%170, axis=3) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Softmax:0:0 */;
  %172 = shape_of(%148, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %173 = cast(%171, dtype="float32") /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Cast_2:0:0 */;
  %174 = shape_of(%173, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %175 = strided_slice(%172, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %176 = strided_slice(%174, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %177 = strided_slice(%172, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %178 = strided_slice(%174, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %179 = maximum(%175, %176) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %180 = maximum(%177, %178) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %181 = (%179, %180) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %182 = concatenate(%181) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %183 = strided_slice(%174, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %184 = (%182, %183) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %185 = concatenate(%184) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %186 = dyn.broadcast_to(%173, %185, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %187 = shape_of(%186, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %188 = strided_slice(%187, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %189 = (meta[relay.Constant][43] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */, %188) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %190 = concatenate(%189) /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %191 = strided_slice(%172, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %192 = (%182, %191) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %193 = concatenate(%192) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %194 = dyn.broadcast_to(%148, %193, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %195 = shape_of(%194, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %196 = strided_slice(%195, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %197 = (meta[relay.Constant][44] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */, %196) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %198 = concatenate(%197) /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %199 = dyn.reshape(%194, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %200 = dyn.reshape(%186, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %201 = transpose(%199, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %202 = strided_slice(%174, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %203 = strided_slice(%172, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %204 = (%182, %202, %203) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %205 = nn.batch_matmul(%200, %201, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %206 = concatenate(%204) /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %207 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/MatMul_1:0:0 */;
  %208 = transpose(%207, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.0/attn/Transpose_4:0:0 */;
  %209 = shape_of(%208, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Shape_9:0:0 */;
  %210 = take(%209, 0i64 /* ty=int64 span=/transformer/h.0/attn/Constant_35:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather_6:0:0 */;
  %211 = shape_of(%208, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.0/attn/Shape_10:0:0 */;
  %212 = take(%211, 1i64 /* ty=int64 span=/transformer/h.0/attn/Constant_36:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/Gather_7:0:0 */;
  %213 = expand_dims(%210, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_9:0:0 */;
  %214 = expand_dims(%212, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Unsqueeze_10:0:0 */;
  %215 = (%213, %214, meta[relay.Constant][45] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/Constant_37:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/Concat_3:0:0 */;
  %216 = concatenate(%215) /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/Concat_3:0:0 */;
  %217 = dyn.reshape(%208, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/Reshape_3:0:0 */;
  %218 = shape_of(%217, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_proj/Shape_2:0:0 */;
  %219 = strided_slice(%218, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_proj/Slice:0:0 */;
  %220 = squeeze(%219, axis=[0]) /* ty=int64 span=/transformer/h.0/attn/c_proj/Squeeze:0:0 */;
  %221 = expand_dims(%220, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_proj/Unsqueeze:0:0 */;
  %222 = (meta[relay.Constant][46] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_proj/Constant_6:0:0 */, %221) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/c_proj/Concat:0:0 */;
  %223 = concatenate(%222) /* ty=Tensor[(2), int64] span=/transformer/h.0/attn/c_proj/Concat:0:0 */;
  %224 = dyn.reshape(%217, %223, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.0/attn/c_proj/Reshape:0:0 */;
  %225 = nn.dense(%224, meta[relay.Constant][47] /* ty=Tensor[(32, ?), float32] span=/transformer/h.0/attn/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.0/attn/c_proj/Gemm:0:0 */;
  %226 = shape_of(%217, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_proj/Shape:0:0 */;
  %227 = take(%226, 0i64 /* ty=int64 span=/transformer/h.0/attn/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/c_proj/Gather:0:0 */;
  %228 = shape_of(%217, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_proj/Shape_1:0:0 */;
  %229 = take(%228, 1i64 /* ty=int64 span=/transformer/h.0/attn/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/attn/c_proj/Gather_1:0:0 */;
  %230 = expand_dims(%227, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_proj/Unsqueeze_1:0:0 */;
  %231 = expand_dims(%229, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_proj/Unsqueeze_2:0:0 */;
  %232 = (%230, %231, meta[relay.Constant][49] /* ty=Tensor[(1), int64] span=/transformer/h.0/attn/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/attn/c_proj/Concat_1:0:0 */;
  %233 = add(%225, meta[relay.Constant][48] /* ty=Tensor[(32), float32] span=Identity_41:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.0/attn/c_proj/Gemm:0:0 */;
  %234 = concatenate(%232) /* ty=Tensor[(3), int64] span=/transformer/h.0/attn/c_proj/Concat_1:0:0 */;
  %235 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/attn/c_proj/Reshape_1:0:0 */;
  %236 = add(%235, %21) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/Add:0:0 */;
  %237 = mean(%236, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_2/ReduceMean:0:0 */;
  %238 = subtract(%236, %237) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_2/Sub:0:0 */;
  %239 = power(%238, 2f /* ty=float32 span=/transformer/h.0/ln_2/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_2/Pow:0:0 */;
  %240 = mean(%239, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_2/ReduceMean_1:0:0 */;
  %241 = add(%240, 1e-05f /* ty=float32 span=/transformer/h.0/ln_2/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_2/Add:0:0 */;
  %242 = sqrt(%241) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.0/ln_2/Sqrt:0:0 */;
  %243 = divide(%238, %242) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_2/Div:0:0 */;
  %244 = multiply(%243, meta[relay.Constant][50] /* ty=Tensor[(32), float32] span=Identity_40:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_2/Mul:0:0 */;
  %245 = add(%244, meta[relay.Constant][51] /* ty=Tensor[(32), float32] span=Identity_39:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/ln_2/Add_1:0:0 */;
  %246 = shape_of(%245, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_fc/Shape_2:0:0 */;
  %247 = strided_slice(%246, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_fc/Slice:0:0 */;
  %248 = squeeze(%247, axis=[0]) /* ty=int64 span=/transformer/h.0/mlp/c_fc/Squeeze:0:0 */;
  %249 = expand_dims(%248, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_fc/Unsqueeze:0:0 */;
  %250 = (meta[relay.Constant][52] /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_fc/Constant_6:0:0 */, %249) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/mlp/c_fc/Concat:0:0 */;
  %251 = concatenate(%250) /* ty=Tensor[(2), int64] span=/transformer/h.0/mlp/c_fc/Concat:0:0 */;
  %252 = dyn.reshape(%245, %251, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.0/mlp/c_fc/Reshape:0:0 */;
  %253 = nn.dense(%252, meta[relay.Constant][53] /* ty=Tensor[(128, ?), float32] span=/transformer/h.0/mlp/c_fc/Gemm:0:0 */, units=128) /* ty=Tensor[(?, 128), float32] span=/transformer/h.0/mlp/c_fc/Gemm:0:0 */;
  %254 = shape_of(%245, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_fc/Shape:0:0 */;
  %255 = take(%254, 0i64 /* ty=int64 span=/transformer/h.0/mlp/c_fc/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/mlp/c_fc/Gather:0:0 */;
  %256 = shape_of(%245, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_fc/Shape_1:0:0 */;
  %257 = take(%256, 1i64 /* ty=int64 span=/transformer/h.0/mlp/c_fc/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/mlp/c_fc/Gather_1:0:0 */;
  %258 = expand_dims(%255, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_fc/Unsqueeze_1:0:0 */;
  %259 = expand_dims(%257, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_fc/Unsqueeze_2:0:0 */;
  %260 = (%258, %259, meta[relay.Constant][55] /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_fc/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/mlp/c_fc/Concat_1:0:0 */;
  %261 = add(%253, meta[relay.Constant][54] /* ty=Tensor[(128), float32] span=Identity_3.transformer.h.0.mlp.c_fc.bias:0:0 */) /* ty=Tensor[(?, 128), float32] span=/transformer/h.0/mlp/c_fc/Gemm:0:0 */;
  %262 = concatenate(%260) /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_fc/Concat_1:0:0 */;
  %263 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/c_fc/Reshape_1:0:0 */;
  %264 = power(%263, 3f /* ty=float32 span=/transformer/h.0/mlp/act/Constant_1:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Pow:0:0 */;
  %265 = multiply(%264, 0.044715f /* ty=float32 span=/transformer/h.0/mlp/act/Constant_2:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Mul_1:0:0 */;
  %266 = add(%263, %265) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Add:0:0 */;
  %267 = multiply(%266, 0.797885f /* ty=float32 span=/transformer/h.0/mlp/act/Constant_3:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Mul_2:0:0 */;
  %268 = tanh(%267) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Tanh:0:0 */;
  %269 = multiply(%263, 0.5f /* ty=float32 span=/transformer/h.0/mlp/act/Constant:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Mul:0:0 */;
  %270 = add(%268, 1f /* ty=float32 span=/transformer/h.0/mlp/act/Constant_4:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Add_1:0:0 */;
  %271 = multiply(%269, %270) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/act/Mul_3:0:0 */;
  %272 = shape_of(%271, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_proj/Shape_2:0:0 */;
  %273 = strided_slice(%272, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_proj/Slice:0:0 */;
  %274 = squeeze(%273, axis=[0]) /* ty=int64 span=/transformer/h.0/mlp/c_proj/Squeeze:0:0 */;
  %275 = expand_dims(%274, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_proj/Unsqueeze:0:0 */;
  %276 = (meta[relay.Constant][56] /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_proj/Constant_6:0:0 */, %275) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/mlp/c_proj/Concat:0:0 */;
  %277 = concatenate(%276) /* ty=Tensor[(2), int64] span=/transformer/h.0/mlp/c_proj/Concat:0:0 */;
  %278 = dyn.reshape(%271, %277, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.0/mlp/c_proj/Reshape:0:0 */;
  %279 = nn.dense(%278, meta[relay.Constant][57] /* ty=Tensor[(32, ?), float32] span=/transformer/h.0/mlp/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.0/mlp/c_proj/Gemm:0:0 */;
  %280 = shape_of(%271, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_proj/Shape:0:0 */;
  %281 = take(%280, 0i64 /* ty=int64 span=/transformer/h.0/mlp/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/mlp/c_proj/Gather:0:0 */;
  %282 = shape_of(%271, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_proj/Shape_1:0:0 */;
  %283 = take(%282, 1i64 /* ty=int64 span=/transformer/h.0/mlp/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.0/mlp/c_proj/Gather_1:0:0 */;
  %284 = expand_dims(%281, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_proj/Unsqueeze_1:0:0 */;
  %285 = expand_dims(%283, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_proj/Unsqueeze_2:0:0 */;
  %286 = (%284, %285, meta[relay.Constant][59] /* ty=Tensor[(1), int64] span=/transformer/h.0/mlp/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.0/mlp/c_proj/Concat_1:0:0 */;
  %287 = add(%279, meta[relay.Constant][58] /* ty=Tensor[(32), float32] span=Identity_38:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.0/mlp/c_proj/Gemm:0:0 */;
  %288 = concatenate(%286) /* ty=Tensor[(3), int64] span=/transformer/h.0/mlp/c_proj/Concat_1:0:0 */;
  %289 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.0/mlp/c_proj/Reshape_1:0:0 */;
  %290 = add(%236, %289) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.0/Add_1:0:0 */;
  %291 = mean(%290, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_1/ReduceMean:0:0 */;
  %292 = subtract(%290, %291) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_1/Sub:0:0 */;
  %293 = power(%292, 2f /* ty=float32 span=/transformer/h.1/ln_1/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_1/Pow:0:0 */;
  %294 = mean(%293, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_1/ReduceMean_1:0:0 */;
  %295 = add(%294, 1e-05f /* ty=float32 span=/transformer/h.1/ln_1/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_1/Add:0:0 */;
  %296 = sqrt(%295) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_1/Sqrt:0:0 */;
  %297 = divide(%292, %296) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_1/Div:0:0 */;
  %298 = multiply(%297, meta[relay.Constant][60] /* ty=Tensor[(32), float32] span=Identity_37:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_1/Mul:0:0 */;
  %299 = add(%298, meta[relay.Constant][61] /* ty=Tensor[(32), float32] span=Identity_36:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_1/Add_1:0:0 */;
  %300 = shape_of(%299, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_attn/Shape_2:0:0 */;
  %301 = strided_slice(%300, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_attn/Slice:0:0 */;
  %302 = squeeze(%301, axis=[0]) /* ty=int64 span=/transformer/h.1/attn/c_attn/Squeeze:0:0 */;
  %303 = expand_dims(%302, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_attn/Unsqueeze:0:0 */;
  %304 = (meta[relay.Constant][62] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_attn/Constant_6:0:0 */, %303) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/c_attn/Concat:0:0 */;
  %305 = concatenate(%304) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/c_attn/Concat:0:0 */;
  %306 = dyn.reshape(%299, %305, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.1/attn/c_attn/Reshape:0:0 */;
  %307 = nn.dense(%306, meta[relay.Constant][63] /* ty=Tensor[(96, ?), float32] span=/transformer/h.1/attn/c_attn/Gemm:0:0 */, units=96) /* ty=Tensor[(?, 96), float32] span=/transformer/h.1/attn/c_attn/Gemm:0:0 */;
  %308 = shape_of(%299, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_attn/Shape:0:0 */;
  %309 = take(%308, 0i64 /* ty=int64 span=/transformer/h.1/attn/c_attn/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/c_attn/Gather:0:0 */;
  %310 = shape_of(%299, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_attn/Shape_1:0:0 */;
  %311 = take(%310, 1i64 /* ty=int64 span=/transformer/h.1/attn/c_attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/c_attn/Gather_1:0:0 */;
  %312 = expand_dims(%309, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_attn/Unsqueeze_1:0:0 */;
  %313 = expand_dims(%311, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_attn/Unsqueeze_2:0:0 */;
  %314 = (%312, %313, meta[relay.Constant][65] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_attn/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/c_attn/Concat_1:0:0 */;
  %315 = add(%307, meta[relay.Constant][64] /* ty=Tensor[(96), float32] span=Identity_34:0:0 */) /* ty=Tensor[(?, 96), float32] span=/transformer/h.1/attn/c_attn/Gemm:0:0 */;
  %316 = concatenate(%314) /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_attn/Concat_1:0:0 */;
  %317 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/c_attn/Reshape_1:0:0 */;
  %318 = split(%317, indices_or_sections=[32i64, 64i64], axis=2) /* ty=(Tensor[(?, ?, 32), float32], Tensor[(?, ?, 32), float32], Tensor[(?, ?, ?), float32]) span=/transformer/h.1/attn/Split:0:0 */;
  %319 = %318.1 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/attn/Split:0:0 */;
  %320 = shape_of(%319, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/Shape_2:0:0 */;
  %321 = take(%320, 0i64 /* ty=int64 span=/transformer/h.1/attn/Constant_5:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather_2:0:0 */;
  %322 = shape_of(%319, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/Shape_3:0:0 */;
  %323 = take(%322, 1i64 /* ty=int64 span=/transformer/h.1/attn/Constant_6:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather_3:0:0 */;
  %324 = expand_dims(%321, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_2:0:0 */;
  %325 = expand_dims(%323, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_3:0:0 */;
  %326 = (%324, %325, meta[relay.Constant][66] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Constant_7:0:0 */, meta[relay.Constant][67] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Constant_8:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/Concat_1:0:0 */;
  %327 = concatenate(%326) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Concat_1:0:0 */;
  %328 = dyn.reshape(%319, %327, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Reshape_1:0:0 */;
  %329 = transpose(%328, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Transpose_1:0:0 */;
  %330 = shape_of(%329, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Shape_8:0:0 */;
  %331 = strided_slice(%330, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Slice_2:0:0 */;
  %332 = %318.0 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/attn/Split:0:0 */;
  %333 = shape_of(%332, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/Shape:0:0 */;
  %334 = take(%333, 0i64 /* ty=int64 span=/transformer/h.1/attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather:0:0 */;
  %335 = shape_of(%332, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/Shape_1:0:0 */;
  %336 = take(%335, 1i64 /* ty=int64 span=/transformer/h.1/attn/Constant_2:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather_1:0:0 */;
  %337 = expand_dims(%334, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze:0:0 */;
  %338 = expand_dims(%336, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_1:0:0 */;
  %339 = (%337, %338, meta[relay.Constant][68] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Constant_3:0:0 */, meta[relay.Constant][69] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Constant_4:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/Concat:0:0 */;
  %340 = concatenate(%339) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Concat:0:0 */;
  %341 = dyn.reshape(%332, %340, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Reshape:0:0 */;
  %342 = transpose(%341, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Transpose:0:0 */;
  %343 = shape_of(%342, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Shape_7:0:0 */;
  %344 = strided_slice(%343, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Slice_1:0:0 */;
  %345 = squeeze(%331, axis=[0]) /* ty=int64 span=/transformer/h.1/attn/Squeeze_2:0:0 */;
  %346 = squeeze(%344, axis=[0]) /* ty=int64 span=/transformer/h.1/attn/Squeeze_1:0:0 */;
  %347 = subtract(%345, %346) /* ty=int64 span=/transformer/h.1/attn/Sub:0:0 */;
  %348 = expand_dims(%347, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_6:0:0 */;
  %349 = scatter_elements(meta[relay.Constant][10] /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */, meta[relay.Constant][11] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Slice_3:0:0 */, %348) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %350 = cast_like(0 /* ty=int32 span=/transformer/h.1/attn/Slice_3:0:0 */, %349) /* ty=int64 span=/transformer/h.1/attn/Slice_3:0:0 */;
  %351 = cast_like(meta[relay.Constant][70] /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_3:0:0 */, %349) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %352 = slice_like(%351, %349, axes=None) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %353 = less(%349, %350) /* ty=Tensor[(4), bool] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %354 = add(%349, %352) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %355 = where(%353, %354, %349) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %356 = greater_equal(%355, %352) /* ty=Tensor[(4), bool] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %357 = expand_dims(%345, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_7:0:0 */;
  %358 = where(%356, %352, %355) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %359 = scatter_elements(meta[relay.Constant][71] /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */, meta[relay.Constant][11] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Slice_3:0:0 */, %357) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %360 = dyn.strided_slice(meta[relay.Constant][9] /* ty=Tensor[(1, 1, 512, 512), uint8] span=Identity_35:0:0 */, %358, %359, meta[relay.Constant][72] /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_3:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.1/attn/Slice_3:0:0 */;
  %361 = shape_of(%360, dtype="int32") /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %362 = cast_like(%361, meta[relay.Constant][74] /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %363 = slice_like(%362, meta[relay.Constant][74] /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */, axes=None) /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %364 = add(meta[relay.Constant][74] /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */, %363) /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %365 = where(meta[relay.Constant][73] /* ty=Tensor[(4), bool] span=/transformer/h.1/attn/Slice_4:0:0 */, %364, meta[relay.Constant][74] /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %366 = greater_equal(%365, %363) /* ty=Tensor[(4), bool] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %367 = shape_of(%360, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %368 = expand_dims(%345, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_8:0:0 */;
  %369 = where(%366, %363, %365) /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %370 = scatter_elements(%367, meta[relay.Constant][75] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Slice_4:0:0 */, %368) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %371 = dyn.strided_slice(%360, %369, %370, meta[relay.Constant][76] /* ty=Tensor[(4), int32] span=/transformer/h.1/attn/Slice_4:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.1/attn/Slice_4:0:0 */;
  %372 = transpose(%328, axes=[0, 2, 3, 1]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Transpose_3:0:0 */;
  %373 = shape_of(%372, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %374 = shape_of(%342, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %375 = strided_slice(%373, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %376 = strided_slice(%374, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %377 = strided_slice(%373, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %378 = strided_slice(%374, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %379 = maximum(%375, %376) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %380 = maximum(%377, %378) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %381 = (%379, %380) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/MatMul:0:0 */;
  %382 = concatenate(%381) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %383 = strided_slice(%374, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %384 = (%382, %383) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul:0:0 */;
  %385 = concatenate(%384) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %386 = dyn.broadcast_to(%342, %385, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/MatMul:0:0 */;
  %387 = shape_of(%386, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %388 = strided_slice(%387, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %389 = (meta[relay.Constant][77] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */, %388) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul:0:0 */;
  %390 = concatenate(%389) /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %391 = strided_slice(%373, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %392 = (%382, %391) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul:0:0 */;
  %393 = concatenate(%392) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %394 = dyn.broadcast_to(%372, %393, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/MatMul:0:0 */;
  %395 = shape_of(%394, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %396 = strided_slice(%395, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %397 = (meta[relay.Constant][78] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */, %396) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul:0:0 */;
  %398 = concatenate(%397) /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %399 = dyn.reshape(%394, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul:0:0 */;
  %400 = dyn.reshape(%386, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul:0:0 */;
  %401 = transpose(%399, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul:0:0 */;
  %402 = strided_slice(%374, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %403 = strided_slice(%373, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %404 = (%382, %402, %403) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/MatMul:0:0 */;
  %405 = nn.batch_matmul(%400, %401, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul:0:0 */;
  %406 = concatenate(%404) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul:0:0 */;
  %407 = %318.2 /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/Split:0:0 */;
  %408 = shape_of(%407, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/Shape_4:0:0 */;
  %409 = take(%408, 0i64 /* ty=int64 span=/transformer/h.1/attn/Constant_9:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather_4:0:0 */;
  %410 = shape_of(%407, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/Shape_5:0:0 */;
  %411 = take(%410, 1i64 /* ty=int64 span=/transformer/h.1/attn/Constant_10:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather_5:0:0 */;
  %412 = expand_dims(%409, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_4:0:0 */;
  %413 = expand_dims(%411, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_5:0:0 */;
  %414 = (%412, %413, meta[relay.Constant][79] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Constant_11:0:0 */, meta[relay.Constant][80] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Constant_12:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/Concat_2:0:0 */;
  %415 = concatenate(%414) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Concat_2:0:0 */;
  %416 = dyn.reshape(%407, %415, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Reshape_2:0:0 */;
  %417 = transpose(%416, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Transpose_2:0:0 */;
  %418 = shape_of(%417, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Shape_6:0:0 */;
  %419 = strided_slice(%418, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Slice:0:0 */;
  %420 = squeeze(%419, axis=[0]) /* ty=int64 span=/transformer/h.1/attn/Squeeze:0:0 */;
  %421 = cast(%420, dtype="float32") /* ty=float32 span=/transformer/h.1/attn/Cast:0:0 */;
  %422 = power(%421, 0.5f /* ty=float32 span=/transformer/h.1/attn/Constant_17:0:0 */) /* ty=float32 span=/transformer/h.1/attn/Pow:0:0 */;
  %423 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/MatMul:0:0 */;
  %424 = add(0f /* ty=float32 span=/transformer/h.1/attn/ConstantOfShape:0:0 */, %422) /* ty=float32 span=/transformer/h.1/attn/Add:0:0 */;
  %425 = cast(%371, dtype="bool") /* ty=Tensor[(?, ?, ?, ?), bool] span=/transformer/h.1/attn/Cast_1:0:0 */;
  %426 = divide(%423, %424) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Div:0:0 */;
  %427 = where(%425, %426, -3.40282e+38f /* ty=float32 span=Constant_220:0:0 */) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Where:0:0 */;
  %428 = add(%427, %169) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Add_1:0:0 */;
  %429 = nn.softmax(%428, axis=3) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Softmax:0:0 */;
  %430 = shape_of(%417, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %431 = cast(%429, dtype="float32") /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Cast_2:0:0 */;
  %432 = shape_of(%431, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %433 = strided_slice(%430, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %434 = strided_slice(%432, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %435 = strided_slice(%430, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %436 = strided_slice(%432, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %437 = maximum(%433, %434) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %438 = maximum(%435, %436) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %439 = (%437, %438) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %440 = concatenate(%439) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %441 = strided_slice(%432, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %442 = (%440, %441) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %443 = concatenate(%442) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %444 = dyn.broadcast_to(%431, %443, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %445 = shape_of(%444, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %446 = strided_slice(%445, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %447 = (meta[relay.Constant][81] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */, %446) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %448 = concatenate(%447) /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %449 = strided_slice(%430, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %450 = (%440, %449) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %451 = concatenate(%450) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %452 = dyn.broadcast_to(%417, %451, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %453 = shape_of(%452, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %454 = strided_slice(%453, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %455 = (meta[relay.Constant][82] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */, %454) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %456 = concatenate(%455) /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %457 = dyn.reshape(%452, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %458 = dyn.reshape(%444, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %459 = transpose(%457, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %460 = strided_slice(%432, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %461 = strided_slice(%430, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %462 = (%440, %460, %461) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %463 = nn.batch_matmul(%458, %459, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %464 = concatenate(%462) /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %465 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/MatMul_1:0:0 */;
  %466 = transpose(%465, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.1/attn/Transpose_4:0:0 */;
  %467 = shape_of(%466, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Shape_9:0:0 */;
  %468 = take(%467, 0i64 /* ty=int64 span=/transformer/h.1/attn/Constant_35:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather_6:0:0 */;
  %469 = shape_of(%466, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.1/attn/Shape_10:0:0 */;
  %470 = take(%469, 1i64 /* ty=int64 span=/transformer/h.1/attn/Constant_36:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/Gather_7:0:0 */;
  %471 = expand_dims(%468, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_9:0:0 */;
  %472 = expand_dims(%470, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Unsqueeze_10:0:0 */;
  %473 = (%471, %472, meta[relay.Constant][83] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/Constant_37:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/Concat_3:0:0 */;
  %474 = concatenate(%473) /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/Concat_3:0:0 */;
  %475 = dyn.reshape(%466, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/Reshape_3:0:0 */;
  %476 = shape_of(%475, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_proj/Shape_2:0:0 */;
  %477 = strided_slice(%476, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_proj/Slice:0:0 */;
  %478 = squeeze(%477, axis=[0]) /* ty=int64 span=/transformer/h.1/attn/c_proj/Squeeze:0:0 */;
  %479 = expand_dims(%478, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_proj/Unsqueeze:0:0 */;
  %480 = (meta[relay.Constant][84] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_proj/Constant_6:0:0 */, %479) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/c_proj/Concat:0:0 */;
  %481 = concatenate(%480) /* ty=Tensor[(2), int64] span=/transformer/h.1/attn/c_proj/Concat:0:0 */;
  %482 = dyn.reshape(%475, %481, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.1/attn/c_proj/Reshape:0:0 */;
  %483 = nn.dense(%482, meta[relay.Constant][85] /* ty=Tensor[(32, ?), float32] span=/transformer/h.1/attn/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.1/attn/c_proj/Gemm:0:0 */;
  %484 = shape_of(%475, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_proj/Shape:0:0 */;
  %485 = take(%484, 0i64 /* ty=int64 span=/transformer/h.1/attn/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/c_proj/Gather:0:0 */;
  %486 = shape_of(%475, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_proj/Shape_1:0:0 */;
  %487 = take(%486, 1i64 /* ty=int64 span=/transformer/h.1/attn/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/attn/c_proj/Gather_1:0:0 */;
  %488 = expand_dims(%485, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_proj/Unsqueeze_1:0:0 */;
  %489 = expand_dims(%487, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_proj/Unsqueeze_2:0:0 */;
  %490 = (%488, %489, meta[relay.Constant][87] /* ty=Tensor[(1), int64] span=/transformer/h.1/attn/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/attn/c_proj/Concat_1:0:0 */;
  %491 = add(%483, meta[relay.Constant][86] /* ty=Tensor[(32), float32] span=Identity_33:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.1/attn/c_proj/Gemm:0:0 */;
  %492 = concatenate(%490) /* ty=Tensor[(3), int64] span=/transformer/h.1/attn/c_proj/Concat_1:0:0 */;
  %493 = dyn.reshape(%491, %492, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/attn/c_proj/Reshape_1:0:0 */;
  %494 = add(%493, %290) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/Add:0:0 */;
  %495 = mean(%494, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_2/ReduceMean:0:0 */;
  %496 = subtract(%494, %495) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_2/Sub:0:0 */;
  %497 = power(%496, 2f /* ty=float32 span=/transformer/h.1/ln_2/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_2/Pow:0:0 */;
  %498 = mean(%497, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_2/ReduceMean_1:0:0 */;
  %499 = add(%498, 1e-05f /* ty=float32 span=/transformer/h.1/ln_2/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_2/Add:0:0 */;
  %500 = sqrt(%499) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.1/ln_2/Sqrt:0:0 */;
  %501 = divide(%496, %500) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_2/Div:0:0 */;
  %502 = multiply(%501, meta[relay.Constant][88] /* ty=Tensor[(32), float32] span=Identity_32:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_2/Mul:0:0 */;
  %503 = add(%502, meta[relay.Constant][89] /* ty=Tensor[(32), float32] span=Identity_31:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/ln_2/Add_1:0:0 */;
  %504 = shape_of(%503, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_fc/Shape_2:0:0 */;
  %505 = strided_slice(%504, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_fc/Slice:0:0 */;
  %506 = squeeze(%505, axis=[0]) /* ty=int64 span=/transformer/h.1/mlp/c_fc/Squeeze:0:0 */;
  %507 = expand_dims(%506, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_fc/Unsqueeze:0:0 */;
  %508 = (meta[relay.Constant][90] /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_fc/Constant_6:0:0 */, %507) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/mlp/c_fc/Concat:0:0 */;
  %509 = concatenate(%508) /* ty=Tensor[(2), int64] span=/transformer/h.1/mlp/c_fc/Concat:0:0 */;
  %510 = dyn.reshape(%503, %509, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.1/mlp/c_fc/Reshape:0:0 */;
  %511 = nn.dense(%510, meta[relay.Constant][91] /* ty=Tensor[(128, ?), float32] span=/transformer/h.1/mlp/c_fc/Gemm:0:0 */, units=128) /* ty=Tensor[(?, 128), float32] span=/transformer/h.1/mlp/c_fc/Gemm:0:0 */;
  %512 = shape_of(%503, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_fc/Shape:0:0 */;
  %513 = take(%512, 0i64 /* ty=int64 span=/transformer/h.1/mlp/c_fc/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/mlp/c_fc/Gather:0:0 */;
  %514 = shape_of(%503, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_fc/Shape_1:0:0 */;
  %515 = take(%514, 1i64 /* ty=int64 span=/transformer/h.1/mlp/c_fc/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/mlp/c_fc/Gather_1:0:0 */;
  %516 = expand_dims(%513, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_fc/Unsqueeze_1:0:0 */;
  %517 = expand_dims(%515, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_fc/Unsqueeze_2:0:0 */;
  %518 = (%516, %517, meta[relay.Constant][93] /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_fc/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/mlp/c_fc/Concat_1:0:0 */;
  %519 = add(%511, meta[relay.Constant][92] /* ty=Tensor[(128), float32] span=Identity_30:0:0 */) /* ty=Tensor[(?, 128), float32] span=/transformer/h.1/mlp/c_fc/Gemm:0:0 */;
  %520 = concatenate(%518) /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_fc/Concat_1:0:0 */;
  %521 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/c_fc/Reshape_1:0:0 */;
  %522 = power(%521, 3f /* ty=float32 span=/transformer/h.1/mlp/act/Constant_1:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Pow:0:0 */;
  %523 = multiply(%522, 0.044715f /* ty=float32 span=/transformer/h.1/mlp/act/Constant_2:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Mul_1:0:0 */;
  %524 = add(%521, %523) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Add:0:0 */;
  %525 = multiply(%524, 0.797885f /* ty=float32 span=/transformer/h.1/mlp/act/Constant_3:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Mul_2:0:0 */;
  %526 = tanh(%525) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Tanh:0:0 */;
  %527 = multiply(%521, 0.5f /* ty=float32 span=/transformer/h.1/mlp/act/Constant:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Mul:0:0 */;
  %528 = add(%526, 1f /* ty=float32 span=/transformer/h.1/mlp/act/Constant_4:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Add_1:0:0 */;
  %529 = multiply(%527, %528) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/act/Mul_3:0:0 */;
  %530 = shape_of(%529, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_proj/Shape_2:0:0 */;
  %531 = strided_slice(%530, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_proj/Slice:0:0 */;
  %532 = squeeze(%531, axis=[0]) /* ty=int64 span=/transformer/h.1/mlp/c_proj/Squeeze:0:0 */;
  %533 = expand_dims(%532, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_proj/Unsqueeze:0:0 */;
  %534 = (meta[relay.Constant][94] /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_proj/Constant_6:0:0 */, %533) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/mlp/c_proj/Concat:0:0 */;
  %535 = concatenate(%534) /* ty=Tensor[(2), int64] span=/transformer/h.1/mlp/c_proj/Concat:0:0 */;
  %536 = dyn.reshape(%529, %535, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.1/mlp/c_proj/Reshape:0:0 */;
  %537 = nn.dense(%536, meta[relay.Constant][95] /* ty=Tensor[(32, ?), float32] span=/transformer/h.1/mlp/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.1/mlp/c_proj/Gemm:0:0 */;
  %538 = shape_of(%529, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_proj/Shape:0:0 */;
  %539 = take(%538, 0i64 /* ty=int64 span=/transformer/h.1/mlp/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/mlp/c_proj/Gather:0:0 */;
  %540 = shape_of(%529, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_proj/Shape_1:0:0 */;
  %541 = take(%540, 1i64 /* ty=int64 span=/transformer/h.1/mlp/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.1/mlp/c_proj/Gather_1:0:0 */;
  %542 = expand_dims(%539, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_proj/Unsqueeze_1:0:0 */;
  %543 = expand_dims(%541, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_proj/Unsqueeze_2:0:0 */;
  %544 = (%542, %543, meta[relay.Constant][97] /* ty=Tensor[(1), int64] span=/transformer/h.1/mlp/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.1/mlp/c_proj/Concat_1:0:0 */;
  %545 = add(%537, meta[relay.Constant][96] /* ty=Tensor[(32), float32] span=Identity_29:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.1/mlp/c_proj/Gemm:0:0 */;
  %546 = concatenate(%544) /* ty=Tensor[(3), int64] span=/transformer/h.1/mlp/c_proj/Concat_1:0:0 */;
  %547 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.1/mlp/c_proj/Reshape_1:0:0 */;
  %548 = add(%494, %547) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.1/Add_1:0:0 */;
  %549 = mean(%548, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_1/ReduceMean:0:0 */;
  %550 = subtract(%548, %549) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_1/Sub:0:0 */;
  %551 = power(%550, 2f /* ty=float32 span=/transformer/h.2/ln_1/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_1/Pow:0:0 */;
  %552 = mean(%551, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_1/ReduceMean_1:0:0 */;
  %553 = add(%552, 1e-05f /* ty=float32 span=/transformer/h.2/ln_1/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_1/Add:0:0 */;
  %554 = sqrt(%553) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_1/Sqrt:0:0 */;
  %555 = divide(%550, %554) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_1/Div:0:0 */;
  %556 = multiply(%555, meta[relay.Constant][98] /* ty=Tensor[(32), float32] span=Identity_28:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_1/Mul:0:0 */;
  %557 = add(%556, meta[relay.Constant][99] /* ty=Tensor[(32), float32] span=Identity_27:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_1/Add_1:0:0 */;
  %558 = shape_of(%557, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_attn/Shape_2:0:0 */;
  %559 = strided_slice(%558, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_attn/Slice:0:0 */;
  %560 = squeeze(%559, axis=[0]) /* ty=int64 span=/transformer/h.2/attn/c_attn/Squeeze:0:0 */;
  %561 = expand_dims(%560, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_attn/Unsqueeze:0:0 */;
  %562 = (meta[relay.Constant][100] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_attn/Constant_6:0:0 */, %561) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/c_attn/Concat:0:0 */;
  %563 = concatenate(%562) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/c_attn/Concat:0:0 */;
  %564 = dyn.reshape(%557, %563, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.2/attn/c_attn/Reshape:0:0 */;
  %565 = nn.dense(%564, meta[relay.Constant][101] /* ty=Tensor[(96, ?), float32] span=/transformer/h.2/attn/c_attn/Gemm:0:0 */, units=96) /* ty=Tensor[(?, 96), float32] span=/transformer/h.2/attn/c_attn/Gemm:0:0 */;
  %566 = shape_of(%557, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_attn/Shape:0:0 */;
  %567 = take(%566, 0i64 /* ty=int64 span=/transformer/h.2/attn/c_attn/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/c_attn/Gather:0:0 */;
  %568 = shape_of(%557, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_attn/Shape_1:0:0 */;
  %569 = take(%568, 1i64 /* ty=int64 span=/transformer/h.2/attn/c_attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/c_attn/Gather_1:0:0 */;
  %570 = expand_dims(%567, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_attn/Unsqueeze_1:0:0 */;
  %571 = expand_dims(%569, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_attn/Unsqueeze_2:0:0 */;
  %572 = (%570, %571, meta[relay.Constant][103] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_attn/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/c_attn/Concat_1:0:0 */;
  %573 = add(%565, meta[relay.Constant][102] /* ty=Tensor[(96), float32] span=Identity_25:0:0 */) /* ty=Tensor[(?, 96), float32] span=/transformer/h.2/attn/c_attn/Gemm:0:0 */;
  %574 = concatenate(%572) /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_attn/Concat_1:0:0 */;
  %575 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/c_attn/Reshape_1:0:0 */;
  %576 = split(%575, indices_or_sections=[32i64, 64i64], axis=2) /* ty=(Tensor[(?, ?, 32), float32], Tensor[(?, ?, 32), float32], Tensor[(?, ?, ?), float32]) span=/transformer/h.2/attn/Split:0:0 */;
  %577 = %576.1 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/attn/Split:0:0 */;
  %578 = shape_of(%577, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/Shape_2:0:0 */;
  %579 = take(%578, 0i64 /* ty=int64 span=/transformer/h.2/attn/Constant_5:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather_2:0:0 */;
  %580 = shape_of(%577, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/Shape_3:0:0 */;
  %581 = take(%580, 1i64 /* ty=int64 span=/transformer/h.2/attn/Constant_6:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather_3:0:0 */;
  %582 = expand_dims(%579, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_2:0:0 */;
  %583 = expand_dims(%581, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_3:0:0 */;
  %584 = (%582, %583, meta[relay.Constant][104] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Constant_7:0:0 */, meta[relay.Constant][105] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Constant_8:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/Concat_1:0:0 */;
  %585 = concatenate(%584) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Concat_1:0:0 */;
  %586 = dyn.reshape(%577, %585, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Reshape_1:0:0 */;
  %587 = transpose(%586, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Transpose_1:0:0 */;
  %588 = shape_of(%587, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Shape_8:0:0 */;
  %589 = strided_slice(%588, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Slice_2:0:0 */;
  %590 = %576.0 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/attn/Split:0:0 */;
  %591 = shape_of(%590, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/Shape:0:0 */;
  %592 = take(%591, 0i64 /* ty=int64 span=/transformer/h.2/attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather:0:0 */;
  %593 = shape_of(%590, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/Shape_1:0:0 */;
  %594 = take(%593, 1i64 /* ty=int64 span=/transformer/h.2/attn/Constant_2:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather_1:0:0 */;
  %595 = expand_dims(%592, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze:0:0 */;
  %596 = expand_dims(%594, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_1:0:0 */;
  %597 = (%595, %596, meta[relay.Constant][106] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Constant_3:0:0 */, meta[relay.Constant][107] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Constant_4:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/Concat:0:0 */;
  %598 = concatenate(%597) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Concat:0:0 */;
  %599 = dyn.reshape(%590, %598, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Reshape:0:0 */;
  %600 = transpose(%599, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Transpose:0:0 */;
  %601 = shape_of(%600, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Shape_7:0:0 */;
  %602 = strided_slice(%601, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Slice_1:0:0 */;
  %603 = squeeze(%589, axis=[0]) /* ty=int64 span=/transformer/h.2/attn/Squeeze_2:0:0 */;
  %604 = squeeze(%602, axis=[0]) /* ty=int64 span=/transformer/h.2/attn/Squeeze_1:0:0 */;
  %605 = subtract(%603, %604) /* ty=int64 span=/transformer/h.2/attn/Sub:0:0 */;
  %606 = expand_dims(%605, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_6:0:0 */;
  %607 = scatter_elements(meta[relay.Constant][7] /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */, meta[relay.Constant][8] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Slice_3:0:0 */, %606) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %608 = cast_like(0 /* ty=int32 span=/transformer/h.2/attn/Slice_3:0:0 */, %607) /* ty=int64 span=/transformer/h.2/attn/Slice_3:0:0 */;
  %609 = cast_like(meta[relay.Constant][108] /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_3:0:0 */, %607) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %610 = slice_like(%609, %607, axes=None) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %611 = less(%607, %608) /* ty=Tensor[(4), bool] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %612 = add(%607, %610) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %613 = where(%611, %612, %607) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %614 = greater_equal(%613, %610) /* ty=Tensor[(4), bool] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %615 = expand_dims(%603, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_7:0:0 */;
  %616 = where(%614, %610, %613) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %617 = scatter_elements(meta[relay.Constant][109] /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */, meta[relay.Constant][8] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Slice_3:0:0 */, %615) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %618 = dyn.strided_slice(meta[relay.Constant][6] /* ty=Tensor[(1, 1, 512, 512), uint8] span=Identity_26:0:0 */, %616, %617, meta[relay.Constant][110] /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_3:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.2/attn/Slice_3:0:0 */;
  %619 = shape_of(%618, dtype="int32") /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %620 = cast_like(%619, meta[relay.Constant][112] /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %621 = slice_like(%620, meta[relay.Constant][112] /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */, axes=None) /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %622 = add(meta[relay.Constant][112] /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */, %621) /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %623 = where(meta[relay.Constant][111] /* ty=Tensor[(4), bool] span=/transformer/h.2/attn/Slice_4:0:0 */, %622, meta[relay.Constant][112] /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %624 = greater_equal(%623, %621) /* ty=Tensor[(4), bool] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %625 = shape_of(%618, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %626 = expand_dims(%603, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_8:0:0 */;
  %627 = where(%624, %621, %623) /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %628 = scatter_elements(%625, meta[relay.Constant][113] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Slice_4:0:0 */, %626) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %629 = dyn.strided_slice(%618, %627, %628, meta[relay.Constant][114] /* ty=Tensor[(4), int32] span=/transformer/h.2/attn/Slice_4:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.2/attn/Slice_4:0:0 */;
  %630 = transpose(%586, axes=[0, 2, 3, 1]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Transpose_3:0:0 */;
  %631 = shape_of(%630, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %632 = shape_of(%600, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %633 = strided_slice(%631, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %634 = strided_slice(%632, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %635 = strided_slice(%631, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %636 = strided_slice(%632, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %637 = maximum(%633, %634) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %638 = maximum(%635, %636) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %639 = (%637, %638) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/MatMul:0:0 */;
  %640 = concatenate(%639) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %641 = strided_slice(%632, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %642 = (%640, %641) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul:0:0 */;
  %643 = concatenate(%642) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %644 = dyn.broadcast_to(%600, %643, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/MatMul:0:0 */;
  %645 = shape_of(%644, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %646 = strided_slice(%645, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %647 = (meta[relay.Constant][115] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */, %646) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul:0:0 */;
  %648 = concatenate(%647) /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %649 = strided_slice(%631, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %650 = (%640, %649) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul:0:0 */;
  %651 = concatenate(%650) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %652 = dyn.broadcast_to(%630, %651, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/MatMul:0:0 */;
  %653 = shape_of(%652, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %654 = strided_slice(%653, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %655 = (meta[relay.Constant][116] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */, %654) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul:0:0 */;
  %656 = concatenate(%655) /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %657 = dyn.reshape(%652, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul:0:0 */;
  %658 = dyn.reshape(%644, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul:0:0 */;
  %659 = transpose(%657, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul:0:0 */;
  %660 = strided_slice(%632, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %661 = strided_slice(%631, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %662 = (%640, %660, %661) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/MatMul:0:0 */;
  %663 = nn.batch_matmul(%658, %659, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul:0:0 */;
  %664 = concatenate(%662) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul:0:0 */;
  %665 = %576.2 /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/Split:0:0 */;
  %666 = shape_of(%665, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/Shape_4:0:0 */;
  %667 = take(%666, 0i64 /* ty=int64 span=/transformer/h.2/attn/Constant_9:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather_4:0:0 */;
  %668 = shape_of(%665, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/Shape_5:0:0 */;
  %669 = take(%668, 1i64 /* ty=int64 span=/transformer/h.2/attn/Constant_10:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather_5:0:0 */;
  %670 = expand_dims(%667, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_4:0:0 */;
  %671 = expand_dims(%669, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_5:0:0 */;
  %672 = (%670, %671, meta[relay.Constant][117] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Constant_11:0:0 */, meta[relay.Constant][118] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Constant_12:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/Concat_2:0:0 */;
  %673 = concatenate(%672) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Concat_2:0:0 */;
  %674 = dyn.reshape(%665, %673, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Reshape_2:0:0 */;
  %675 = transpose(%674, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Transpose_2:0:0 */;
  %676 = shape_of(%675, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Shape_6:0:0 */;
  %677 = strided_slice(%676, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Slice:0:0 */;
  %678 = squeeze(%677, axis=[0]) /* ty=int64 span=/transformer/h.2/attn/Squeeze:0:0 */;
  %679 = cast(%678, dtype="float32") /* ty=float32 span=/transformer/h.2/attn/Cast:0:0 */;
  %680 = power(%679, 0.5f /* ty=float32 span=/transformer/h.2/attn/Constant_17:0:0 */) /* ty=float32 span=/transformer/h.2/attn/Pow:0:0 */;
  %681 = dyn.reshape(%663, %664, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/MatMul:0:0 */;
  %682 = add(0f /* ty=float32 span=/transformer/h.2/attn/ConstantOfShape:0:0 */, %680) /* ty=float32 span=/transformer/h.2/attn/Add:0:0 */;
  %683 = cast(%629, dtype="bool") /* ty=Tensor[(?, ?, ?, ?), bool] span=/transformer/h.2/attn/Cast_1:0:0 */;
  %684 = divide(%681, %682) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Div:0:0 */;
  %685 = where(%683, %684, -3.40282e+38f /* ty=float32 span=Constant_220:0:0 */) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Where:0:0 */;
  %686 = add(%685, %169) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Add_1:0:0 */;
  %687 = nn.softmax(%686, axis=3) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Softmax:0:0 */;
  %688 = shape_of(%675, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %689 = cast(%687, dtype="float32") /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Cast_2:0:0 */;
  %690 = shape_of(%689, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %691 = strided_slice(%688, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %692 = strided_slice(%690, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %693 = strided_slice(%688, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %694 = strided_slice(%690, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %695 = maximum(%691, %692) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %696 = maximum(%693, %694) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %697 = (%695, %696) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %698 = concatenate(%697) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %699 = strided_slice(%690, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %700 = (%698, %699) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %701 = concatenate(%700) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %702 = dyn.broadcast_to(%689, %701, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %703 = shape_of(%702, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %704 = strided_slice(%703, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %705 = (meta[relay.Constant][119] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */, %704) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %706 = concatenate(%705) /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %707 = strided_slice(%688, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %708 = (%698, %707) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %709 = concatenate(%708) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %710 = dyn.broadcast_to(%675, %709, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %711 = shape_of(%710, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %712 = strided_slice(%711, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %713 = (meta[relay.Constant][120] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */, %712) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %714 = concatenate(%713) /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %715 = dyn.reshape(%710, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %716 = dyn.reshape(%702, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %717 = transpose(%715, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %718 = strided_slice(%690, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %719 = strided_slice(%688, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %720 = (%698, %718, %719) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %721 = nn.batch_matmul(%716, %717, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %722 = concatenate(%720) /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %723 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/MatMul_1:0:0 */;
  %724 = transpose(%723, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.2/attn/Transpose_4:0:0 */;
  %725 = shape_of(%724, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Shape_9:0:0 */;
  %726 = take(%725, 0i64 /* ty=int64 span=/transformer/h.2/attn/Constant_35:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather_6:0:0 */;
  %727 = shape_of(%724, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.2/attn/Shape_10:0:0 */;
  %728 = take(%727, 1i64 /* ty=int64 span=/transformer/h.2/attn/Constant_36:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/Gather_7:0:0 */;
  %729 = expand_dims(%726, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_9:0:0 */;
  %730 = expand_dims(%728, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Unsqueeze_10:0:0 */;
  %731 = (%729, %730, meta[relay.Constant][121] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/Constant_37:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/Concat_3:0:0 */;
  %732 = concatenate(%731) /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/Concat_3:0:0 */;
  %733 = dyn.reshape(%724, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/Reshape_3:0:0 */;
  %734 = shape_of(%733, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_proj/Shape_2:0:0 */;
  %735 = strided_slice(%734, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_proj/Slice:0:0 */;
  %736 = squeeze(%735, axis=[0]) /* ty=int64 span=/transformer/h.2/attn/c_proj/Squeeze:0:0 */;
  %737 = expand_dims(%736, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_proj/Unsqueeze:0:0 */;
  %738 = (meta[relay.Constant][122] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_proj/Constant_6:0:0 */, %737) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/c_proj/Concat:0:0 */;
  %739 = concatenate(%738) /* ty=Tensor[(2), int64] span=/transformer/h.2/attn/c_proj/Concat:0:0 */;
  %740 = dyn.reshape(%733, %739, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.2/attn/c_proj/Reshape:0:0 */;
  %741 = nn.dense(%740, meta[relay.Constant][123] /* ty=Tensor[(32, ?), float32] span=/transformer/h.2/attn/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.2/attn/c_proj/Gemm:0:0 */;
  %742 = shape_of(%733, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_proj/Shape:0:0 */;
  %743 = take(%742, 0i64 /* ty=int64 span=/transformer/h.2/attn/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/c_proj/Gather:0:0 */;
  %744 = shape_of(%733, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_proj/Shape_1:0:0 */;
  %745 = take(%744, 1i64 /* ty=int64 span=/transformer/h.2/attn/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/attn/c_proj/Gather_1:0:0 */;
  %746 = expand_dims(%743, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_proj/Unsqueeze_1:0:0 */;
  %747 = expand_dims(%745, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_proj/Unsqueeze_2:0:0 */;
  %748 = (%746, %747, meta[relay.Constant][125] /* ty=Tensor[(1), int64] span=/transformer/h.2/attn/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/attn/c_proj/Concat_1:0:0 */;
  %749 = add(%741, meta[relay.Constant][124] /* ty=Tensor[(32), float32] span=Identity_24:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.2/attn/c_proj/Gemm:0:0 */;
  %750 = concatenate(%748) /* ty=Tensor[(3), int64] span=/transformer/h.2/attn/c_proj/Concat_1:0:0 */;
  %751 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/attn/c_proj/Reshape_1:0:0 */;
  %752 = add(%751, %548) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/Add:0:0 */;
  %753 = mean(%752, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_2/ReduceMean:0:0 */;
  %754 = subtract(%752, %753) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_2/Sub:0:0 */;
  %755 = power(%754, 2f /* ty=float32 span=/transformer/h.2/ln_2/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_2/Pow:0:0 */;
  %756 = mean(%755, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_2/ReduceMean_1:0:0 */;
  %757 = add(%756, 1e-05f /* ty=float32 span=/transformer/h.2/ln_2/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_2/Add:0:0 */;
  %758 = sqrt(%757) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.2/ln_2/Sqrt:0:0 */;
  %759 = divide(%754, %758) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_2/Div:0:0 */;
  %760 = multiply(%759, meta[relay.Constant][126] /* ty=Tensor[(32), float32] span=Identity_23:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_2/Mul:0:0 */;
  %761 = add(%760, meta[relay.Constant][127] /* ty=Tensor[(32), float32] span=Identity_22:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/ln_2/Add_1:0:0 */;
  %762 = shape_of(%761, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_fc/Shape_2:0:0 */;
  %763 = strided_slice(%762, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_fc/Slice:0:0 */;
  %764 = squeeze(%763, axis=[0]) /* ty=int64 span=/transformer/h.2/mlp/c_fc/Squeeze:0:0 */;
  %765 = expand_dims(%764, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_fc/Unsqueeze:0:0 */;
  %766 = (meta[relay.Constant][128] /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_fc/Constant_6:0:0 */, %765) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/mlp/c_fc/Concat:0:0 */;
  %767 = concatenate(%766) /* ty=Tensor[(2), int64] span=/transformer/h.2/mlp/c_fc/Concat:0:0 */;
  %768 = dyn.reshape(%761, %767, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.2/mlp/c_fc/Reshape:0:0 */;
  %769 = nn.dense(%768, meta[relay.Constant][129] /* ty=Tensor[(128, ?), float32] span=/transformer/h.2/mlp/c_fc/Gemm:0:0 */, units=128) /* ty=Tensor[(?, 128), float32] span=/transformer/h.2/mlp/c_fc/Gemm:0:0 */;
  %770 = shape_of(%761, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_fc/Shape:0:0 */;
  %771 = take(%770, 0i64 /* ty=int64 span=/transformer/h.2/mlp/c_fc/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/mlp/c_fc/Gather:0:0 */;
  %772 = shape_of(%761, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_fc/Shape_1:0:0 */;
  %773 = take(%772, 1i64 /* ty=int64 span=/transformer/h.2/mlp/c_fc/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/mlp/c_fc/Gather_1:0:0 */;
  %774 = expand_dims(%771, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_fc/Unsqueeze_1:0:0 */;
  %775 = expand_dims(%773, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_fc/Unsqueeze_2:0:0 */;
  %776 = (%774, %775, meta[relay.Constant][131] /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_fc/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/mlp/c_fc/Concat_1:0:0 */;
  %777 = add(%769, meta[relay.Constant][130] /* ty=Tensor[(128), float32] span=Identity_21:0:0 */) /* ty=Tensor[(?, 128), float32] span=/transformer/h.2/mlp/c_fc/Gemm:0:0 */;
  %778 = concatenate(%776) /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_fc/Concat_1:0:0 */;
  %779 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/c_fc/Reshape_1:0:0 */;
  %780 = power(%779, 3f /* ty=float32 span=/transformer/h.2/mlp/act/Constant_1:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Pow:0:0 */;
  %781 = multiply(%780, 0.044715f /* ty=float32 span=/transformer/h.2/mlp/act/Constant_2:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Mul_1:0:0 */;
  %782 = add(%779, %781) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Add:0:0 */;
  %783 = multiply(%782, 0.797885f /* ty=float32 span=/transformer/h.2/mlp/act/Constant_3:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Mul_2:0:0 */;
  %784 = tanh(%783) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Tanh:0:0 */;
  %785 = multiply(%779, 0.5f /* ty=float32 span=/transformer/h.2/mlp/act/Constant:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Mul:0:0 */;
  %786 = add(%784, 1f /* ty=float32 span=/transformer/h.2/mlp/act/Constant_4:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Add_1:0:0 */;
  %787 = multiply(%785, %786) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/act/Mul_3:0:0 */;
  %788 = shape_of(%787, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_proj/Shape_2:0:0 */;
  %789 = strided_slice(%788, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_proj/Slice:0:0 */;
  %790 = squeeze(%789, axis=[0]) /* ty=int64 span=/transformer/h.2/mlp/c_proj/Squeeze:0:0 */;
  %791 = expand_dims(%790, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_proj/Unsqueeze:0:0 */;
  %792 = (meta[relay.Constant][132] /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_proj/Constant_6:0:0 */, %791) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/mlp/c_proj/Concat:0:0 */;
  %793 = concatenate(%792) /* ty=Tensor[(2), int64] span=/transformer/h.2/mlp/c_proj/Concat:0:0 */;
  %794 = dyn.reshape(%787, %793, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.2/mlp/c_proj/Reshape:0:0 */;
  %795 = nn.dense(%794, meta[relay.Constant][133] /* ty=Tensor[(32, ?), float32] span=/transformer/h.2/mlp/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.2/mlp/c_proj/Gemm:0:0 */;
  %796 = shape_of(%787, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_proj/Shape:0:0 */;
  %797 = take(%796, 0i64 /* ty=int64 span=/transformer/h.2/mlp/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/mlp/c_proj/Gather:0:0 */;
  %798 = shape_of(%787, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_proj/Shape_1:0:0 */;
  %799 = take(%798, 1i64 /* ty=int64 span=/transformer/h.2/mlp/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.2/mlp/c_proj/Gather_1:0:0 */;
  %800 = expand_dims(%797, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_proj/Unsqueeze_1:0:0 */;
  %801 = expand_dims(%799, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_proj/Unsqueeze_2:0:0 */;
  %802 = (%800, %801, meta[relay.Constant][135] /* ty=Tensor[(1), int64] span=/transformer/h.2/mlp/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.2/mlp/c_proj/Concat_1:0:0 */;
  %803 = add(%795, meta[relay.Constant][134] /* ty=Tensor[(32), float32] span=Identity_20:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.2/mlp/c_proj/Gemm:0:0 */;
  %804 = concatenate(%802) /* ty=Tensor[(3), int64] span=/transformer/h.2/mlp/c_proj/Concat_1:0:0 */;
  %805 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.2/mlp/c_proj/Reshape_1:0:0 */;
  %806 = add(%752, %805) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.2/Add_1:0:0 */;
  %807 = mean(%806, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_1/ReduceMean:0:0 */;
  %808 = subtract(%806, %807) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_1/Sub:0:0 */;
  %809 = power(%808, 2f /* ty=float32 span=/transformer/h.3/ln_1/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_1/Pow:0:0 */;
  %810 = mean(%809, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_1/ReduceMean_1:0:0 */;
  %811 = add(%810, 1e-05f /* ty=float32 span=/transformer/h.3/ln_1/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_1/Add:0:0 */;
  %812 = sqrt(%811) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_1/Sqrt:0:0 */;
  %813 = divide(%808, %812) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_1/Div:0:0 */;
  %814 = multiply(%813, meta[relay.Constant][136] /* ty=Tensor[(32), float32] span=Identity_19:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_1/Mul:0:0 */;
  %815 = add(%814, meta[relay.Constant][137] /* ty=Tensor[(32), float32] span=Identity_18:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_1/Add_1:0:0 */;
  %816 = shape_of(%815, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_attn/Shape_2:0:0 */;
  %817 = strided_slice(%816, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_attn/Slice:0:0 */;
  %818 = squeeze(%817, axis=[0]) /* ty=int64 span=/transformer/h.3/attn/c_attn/Squeeze:0:0 */;
  %819 = expand_dims(%818, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_attn/Unsqueeze:0:0 */;
  %820 = (meta[relay.Constant][138] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_attn/Constant_6:0:0 */, %819) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/c_attn/Concat:0:0 */;
  %821 = concatenate(%820) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/c_attn/Concat:0:0 */;
  %822 = dyn.reshape(%815, %821, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.3/attn/c_attn/Reshape:0:0 */;
  %823 = nn.dense(%822, meta[relay.Constant][139] /* ty=Tensor[(96, ?), float32] span=/transformer/h.3/attn/c_attn/Gemm:0:0 */, units=96) /* ty=Tensor[(?, 96), float32] span=/transformer/h.3/attn/c_attn/Gemm:0:0 */;
  %824 = shape_of(%815, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_attn/Shape:0:0 */;
  %825 = take(%824, 0i64 /* ty=int64 span=/transformer/h.3/attn/c_attn/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/c_attn/Gather:0:0 */;
  %826 = shape_of(%815, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_attn/Shape_1:0:0 */;
  %827 = take(%826, 1i64 /* ty=int64 span=/transformer/h.3/attn/c_attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/c_attn/Gather_1:0:0 */;
  %828 = expand_dims(%825, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_attn/Unsqueeze_1:0:0 */;
  %829 = expand_dims(%827, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_attn/Unsqueeze_2:0:0 */;
  %830 = (%828, %829, meta[relay.Constant][141] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_attn/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/c_attn/Concat_1:0:0 */;
  %831 = add(%823, meta[relay.Constant][140] /* ty=Tensor[(96), float32] span=Identity_16:0:0 */) /* ty=Tensor[(?, 96), float32] span=/transformer/h.3/attn/c_attn/Gemm:0:0 */;
  %832 = concatenate(%830) /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_attn/Concat_1:0:0 */;
  %833 = dyn.reshape(%831, %832, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/c_attn/Reshape_1:0:0 */;
  %834 = split(%833, indices_or_sections=[32i64, 64i64], axis=2) /* ty=(Tensor[(?, ?, 32), float32], Tensor[(?, ?, 32), float32], Tensor[(?, ?, ?), float32]) span=/transformer/h.3/attn/Split:0:0 */;
  %835 = %834.1 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/attn/Split:0:0 */;
  %836 = shape_of(%835, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/Shape_2:0:0 */;
  %837 = take(%836, 0i64 /* ty=int64 span=/transformer/h.3/attn/Constant_5:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather_2:0:0 */;
  %838 = shape_of(%835, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/Shape_3:0:0 */;
  %839 = take(%838, 1i64 /* ty=int64 span=/transformer/h.3/attn/Constant_6:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather_3:0:0 */;
  %840 = expand_dims(%837, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_2:0:0 */;
  %841 = expand_dims(%839, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_3:0:0 */;
  %842 = (%840, %841, meta[relay.Constant][142] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Constant_7:0:0 */, meta[relay.Constant][143] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Constant_8:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/Concat_1:0:0 */;
  %843 = concatenate(%842) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Concat_1:0:0 */;
  %844 = dyn.reshape(%835, %843, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Reshape_1:0:0 */;
  %845 = transpose(%844, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Transpose_1:0:0 */;
  %846 = shape_of(%845, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Shape_8:0:0 */;
  %847 = strided_slice(%846, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Slice_2:0:0 */;
  %848 = %834.0 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/attn/Split:0:0 */;
  %849 = shape_of(%848, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/Shape:0:0 */;
  %850 = take(%849, 0i64 /* ty=int64 span=/transformer/h.3/attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather:0:0 */;
  %851 = shape_of(%848, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/Shape_1:0:0 */;
  %852 = take(%851, 1i64 /* ty=int64 span=/transformer/h.3/attn/Constant_2:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather_1:0:0 */;
  %853 = expand_dims(%850, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze:0:0 */;
  %854 = expand_dims(%852, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_1:0:0 */;
  %855 = (%853, %854, meta[relay.Constant][144] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Constant_3:0:0 */, meta[relay.Constant][145] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Constant_4:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/Concat:0:0 */;
  %856 = concatenate(%855) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Concat:0:0 */;
  %857 = dyn.reshape(%848, %856, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Reshape:0:0 */;
  %858 = transpose(%857, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Transpose:0:0 */;
  %859 = shape_of(%858, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Shape_7:0:0 */;
  %860 = strided_slice(%859, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Slice_1:0:0 */;
  %861 = squeeze(%847, axis=[0]) /* ty=int64 span=/transformer/h.3/attn/Squeeze_2:0:0 */;
  %862 = squeeze(%860, axis=[0]) /* ty=int64 span=/transformer/h.3/attn/Squeeze_1:0:0 */;
  %863 = subtract(%861, %862) /* ty=int64 span=/transformer/h.3/attn/Sub:0:0 */;
  %864 = expand_dims(%863, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_6:0:0 */;
  %865 = scatter_elements(meta[relay.Constant][4] /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */, meta[relay.Constant][5] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Slice_3:0:0 */, %864) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %866 = cast_like(0 /* ty=int32 span=/transformer/h.3/attn/Slice_3:0:0 */, %865) /* ty=int64 span=/transformer/h.3/attn/Slice_3:0:0 */;
  %867 = cast_like(meta[relay.Constant][146] /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_3:0:0 */, %865) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %868 = slice_like(%867, %865, axes=None) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %869 = less(%865, %866) /* ty=Tensor[(4), bool] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %870 = add(%865, %868) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %871 = where(%869, %870, %865) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %872 = greater_equal(%871, %868) /* ty=Tensor[(4), bool] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %873 = expand_dims(%861, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_7:0:0 */;
  %874 = where(%872, %868, %871) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %875 = scatter_elements(meta[relay.Constant][147] /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */, meta[relay.Constant][5] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Slice_3:0:0 */, %873) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %876 = dyn.strided_slice(meta[relay.Constant][3] /* ty=Tensor[(1, 1, 512, 512), uint8] span=Identity_17:0:0 */, %874, %875, meta[relay.Constant][148] /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_3:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.3/attn/Slice_3:0:0 */;
  %877 = shape_of(%876, dtype="int32") /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %878 = cast_like(%877, meta[relay.Constant][150] /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %879 = slice_like(%878, meta[relay.Constant][150] /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */, axes=None) /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %880 = add(meta[relay.Constant][150] /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */, %879) /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %881 = where(meta[relay.Constant][149] /* ty=Tensor[(4), bool] span=/transformer/h.3/attn/Slice_4:0:0 */, %880, meta[relay.Constant][150] /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %882 = greater_equal(%881, %879) /* ty=Tensor[(4), bool] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %883 = shape_of(%876, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %884 = expand_dims(%861, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_8:0:0 */;
  %885 = where(%882, %879, %881) /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %886 = scatter_elements(%883, meta[relay.Constant][151] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Slice_4:0:0 */, %884) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %887 = dyn.strided_slice(%876, %885, %886, meta[relay.Constant][152] /* ty=Tensor[(4), int32] span=/transformer/h.3/attn/Slice_4:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.3/attn/Slice_4:0:0 */;
  %888 = transpose(%844, axes=[0, 2, 3, 1]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Transpose_3:0:0 */;
  %889 = shape_of(%888, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %890 = shape_of(%858, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %891 = strided_slice(%889, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %892 = strided_slice(%890, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %893 = strided_slice(%889, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %894 = strided_slice(%890, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %895 = maximum(%891, %892) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %896 = maximum(%893, %894) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %897 = (%895, %896) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/MatMul:0:0 */;
  %898 = concatenate(%897) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %899 = strided_slice(%890, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %900 = (%898, %899) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul:0:0 */;
  %901 = concatenate(%900) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %902 = dyn.broadcast_to(%858, %901, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/MatMul:0:0 */;
  %903 = shape_of(%902, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %904 = strided_slice(%903, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %905 = (meta[relay.Constant][153] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */, %904) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul:0:0 */;
  %906 = concatenate(%905) /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %907 = strided_slice(%889, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %908 = (%898, %907) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul:0:0 */;
  %909 = concatenate(%908) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %910 = dyn.broadcast_to(%888, %909, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/MatMul:0:0 */;
  %911 = shape_of(%910, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %912 = strided_slice(%911, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %913 = (meta[relay.Constant][154] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */, %912) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul:0:0 */;
  %914 = concatenate(%913) /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %915 = dyn.reshape(%910, %914, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul:0:0 */;
  %916 = dyn.reshape(%902, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul:0:0 */;
  %917 = transpose(%915, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul:0:0 */;
  %918 = strided_slice(%890, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %919 = strided_slice(%889, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %920 = (%898, %918, %919) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/MatMul:0:0 */;
  %921 = nn.batch_matmul(%916, %917, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul:0:0 */;
  %922 = concatenate(%920) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul:0:0 */;
  %923 = %834.2 /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/Split:0:0 */;
  %924 = shape_of(%923, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/Shape_4:0:0 */;
  %925 = take(%924, 0i64 /* ty=int64 span=/transformer/h.3/attn/Constant_9:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather_4:0:0 */;
  %926 = shape_of(%923, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/Shape_5:0:0 */;
  %927 = take(%926, 1i64 /* ty=int64 span=/transformer/h.3/attn/Constant_10:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather_5:0:0 */;
  %928 = expand_dims(%925, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_4:0:0 */;
  %929 = expand_dims(%927, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_5:0:0 */;
  %930 = (%928, %929, meta[relay.Constant][155] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Constant_11:0:0 */, meta[relay.Constant][156] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Constant_12:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/Concat_2:0:0 */;
  %931 = concatenate(%930) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Concat_2:0:0 */;
  %932 = dyn.reshape(%923, %931, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Reshape_2:0:0 */;
  %933 = transpose(%932, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Transpose_2:0:0 */;
  %934 = shape_of(%933, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Shape_6:0:0 */;
  %935 = strided_slice(%934, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Slice:0:0 */;
  %936 = squeeze(%935, axis=[0]) /* ty=int64 span=/transformer/h.3/attn/Squeeze:0:0 */;
  %937 = cast(%936, dtype="float32") /* ty=float32 span=/transformer/h.3/attn/Cast:0:0 */;
  %938 = power(%937, 0.5f /* ty=float32 span=/transformer/h.3/attn/Constant_17:0:0 */) /* ty=float32 span=/transformer/h.3/attn/Pow:0:0 */;
  %939 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/MatMul:0:0 */;
  %940 = add(0f /* ty=float32 span=/transformer/h.3/attn/ConstantOfShape:0:0 */, %938) /* ty=float32 span=/transformer/h.3/attn/Add:0:0 */;
  %941 = cast(%887, dtype="bool") /* ty=Tensor[(?, ?, ?, ?), bool] span=/transformer/h.3/attn/Cast_1:0:0 */;
  %942 = divide(%939, %940) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Div:0:0 */;
  %943 = where(%941, %942, -3.40282e+38f /* ty=float32 span=Constant_220:0:0 */) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Where:0:0 */;
  %944 = add(%943, %169) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Add_1:0:0 */;
  %945 = nn.softmax(%944, axis=3) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Softmax:0:0 */;
  %946 = shape_of(%933, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %947 = cast(%945, dtype="float32") /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Cast_2:0:0 */;
  %948 = shape_of(%947, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %949 = strided_slice(%946, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %950 = strided_slice(%948, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %951 = strided_slice(%946, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %952 = strided_slice(%948, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %953 = maximum(%949, %950) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %954 = maximum(%951, %952) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %955 = (%953, %954) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %956 = concatenate(%955) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %957 = strided_slice(%948, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %958 = (%956, %957) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %959 = concatenate(%958) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %960 = dyn.broadcast_to(%947, %959, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %961 = shape_of(%960, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %962 = strided_slice(%961, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %963 = (meta[relay.Constant][157] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */, %962) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %964 = concatenate(%963) /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %965 = strided_slice(%946, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %966 = (%956, %965) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %967 = concatenate(%966) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %968 = dyn.broadcast_to(%933, %967, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %969 = shape_of(%968, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %970 = strided_slice(%969, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %971 = (meta[relay.Constant][158] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */, %970) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %972 = concatenate(%971) /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %973 = dyn.reshape(%968, %972, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %974 = dyn.reshape(%960, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %975 = transpose(%973, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %976 = strided_slice(%948, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %977 = strided_slice(%946, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %978 = (%956, %976, %977) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %979 = nn.batch_matmul(%974, %975, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %980 = concatenate(%978) /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %981 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/MatMul_1:0:0 */;
  %982 = transpose(%981, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.3/attn/Transpose_4:0:0 */;
  %983 = shape_of(%982, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Shape_9:0:0 */;
  %984 = take(%983, 0i64 /* ty=int64 span=/transformer/h.3/attn/Constant_35:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather_6:0:0 */;
  %985 = shape_of(%982, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.3/attn/Shape_10:0:0 */;
  %986 = take(%985, 1i64 /* ty=int64 span=/transformer/h.3/attn/Constant_36:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/Gather_7:0:0 */;
  %987 = expand_dims(%984, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_9:0:0 */;
  %988 = expand_dims(%986, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Unsqueeze_10:0:0 */;
  %989 = (%987, %988, meta[relay.Constant][159] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/Constant_37:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/Concat_3:0:0 */;
  %990 = concatenate(%989) /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/Concat_3:0:0 */;
  %991 = dyn.reshape(%982, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/Reshape_3:0:0 */;
  %992 = shape_of(%991, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_proj/Shape_2:0:0 */;
  %993 = strided_slice(%992, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_proj/Slice:0:0 */;
  %994 = squeeze(%993, axis=[0]) /* ty=int64 span=/transformer/h.3/attn/c_proj/Squeeze:0:0 */;
  %995 = expand_dims(%994, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_proj/Unsqueeze:0:0 */;
  %996 = (meta[relay.Constant][160] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_proj/Constant_6:0:0 */, %995) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/c_proj/Concat:0:0 */;
  %997 = concatenate(%996) /* ty=Tensor[(2), int64] span=/transformer/h.3/attn/c_proj/Concat:0:0 */;
  %998 = dyn.reshape(%991, %997, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.3/attn/c_proj/Reshape:0:0 */;
  %999 = nn.dense(%998, meta[relay.Constant][161] /* ty=Tensor[(32, ?), float32] span=/transformer/h.3/attn/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.3/attn/c_proj/Gemm:0:0 */;
  %1000 = shape_of(%991, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_proj/Shape:0:0 */;
  %1001 = take(%1000, 0i64 /* ty=int64 span=/transformer/h.3/attn/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/c_proj/Gather:0:0 */;
  %1002 = shape_of(%991, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_proj/Shape_1:0:0 */;
  %1003 = take(%1002, 1i64 /* ty=int64 span=/transformer/h.3/attn/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/attn/c_proj/Gather_1:0:0 */;
  %1004 = expand_dims(%1001, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_proj/Unsqueeze_1:0:0 */;
  %1005 = expand_dims(%1003, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_proj/Unsqueeze_2:0:0 */;
  %1006 = (%1004, %1005, meta[relay.Constant][163] /* ty=Tensor[(1), int64] span=/transformer/h.3/attn/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/attn/c_proj/Concat_1:0:0 */;
  %1007 = add(%999, meta[relay.Constant][162] /* ty=Tensor[(32), float32] span=Identity_15:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.3/attn/c_proj/Gemm:0:0 */;
  %1008 = concatenate(%1006) /* ty=Tensor[(3), int64] span=/transformer/h.3/attn/c_proj/Concat_1:0:0 */;
  %1009 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/attn/c_proj/Reshape_1:0:0 */;
  %1010 = add(%1009, %806) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/Add:0:0 */;
  %1011 = mean(%1010, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_2/ReduceMean:0:0 */;
  %1012 = subtract(%1010, %1011) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_2/Sub:0:0 */;
  %1013 = power(%1012, 2f /* ty=float32 span=/transformer/h.3/ln_2/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_2/Pow:0:0 */;
  %1014 = mean(%1013, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_2/ReduceMean_1:0:0 */;
  %1015 = add(%1014, 1e-05f /* ty=float32 span=/transformer/h.3/ln_2/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_2/Add:0:0 */;
  %1016 = sqrt(%1015) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.3/ln_2/Sqrt:0:0 */;
  %1017 = divide(%1012, %1016) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_2/Div:0:0 */;
  %1018 = multiply(%1017, meta[relay.Constant][164] /* ty=Tensor[(32), float32] span=Identity_14:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_2/Mul:0:0 */;
  %1019 = add(%1018, meta[relay.Constant][165] /* ty=Tensor[(32), float32] span=Identity_13:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/ln_2/Add_1:0:0 */;
  %1020 = shape_of(%1019, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_fc/Shape_2:0:0 */;
  %1021 = strided_slice(%1020, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_fc/Slice:0:0 */;
  %1022 = squeeze(%1021, axis=[0]) /* ty=int64 span=/transformer/h.3/mlp/c_fc/Squeeze:0:0 */;
  %1023 = expand_dims(%1022, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_fc/Unsqueeze:0:0 */;
  %1024 = (meta[relay.Constant][166] /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_fc/Constant_6:0:0 */, %1023) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/mlp/c_fc/Concat:0:0 */;
  %1025 = concatenate(%1024) /* ty=Tensor[(2), int64] span=/transformer/h.3/mlp/c_fc/Concat:0:0 */;
  %1026 = dyn.reshape(%1019, %1025, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.3/mlp/c_fc/Reshape:0:0 */;
  %1027 = nn.dense(%1026, meta[relay.Constant][167] /* ty=Tensor[(128, ?), float32] span=/transformer/h.3/mlp/c_fc/Gemm:0:0 */, units=128) /* ty=Tensor[(?, 128), float32] span=/transformer/h.3/mlp/c_fc/Gemm:0:0 */;
  %1028 = shape_of(%1019, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_fc/Shape:0:0 */;
  %1029 = take(%1028, 0i64 /* ty=int64 span=/transformer/h.3/mlp/c_fc/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/mlp/c_fc/Gather:0:0 */;
  %1030 = shape_of(%1019, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_fc/Shape_1:0:0 */;
  %1031 = take(%1030, 1i64 /* ty=int64 span=/transformer/h.3/mlp/c_fc/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/mlp/c_fc/Gather_1:0:0 */;
  %1032 = expand_dims(%1029, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_fc/Unsqueeze_1:0:0 */;
  %1033 = expand_dims(%1031, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_fc/Unsqueeze_2:0:0 */;
  %1034 = (%1032, %1033, meta[relay.Constant][169] /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_fc/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/mlp/c_fc/Concat_1:0:0 */;
  %1035 = add(%1027, meta[relay.Constant][168] /* ty=Tensor[(128), float32] span=Identity_12:0:0 */) /* ty=Tensor[(?, 128), float32] span=/transformer/h.3/mlp/c_fc/Gemm:0:0 */;
  %1036 = concatenate(%1034) /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_fc/Concat_1:0:0 */;
  %1037 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/c_fc/Reshape_1:0:0 */;
  %1038 = power(%1037, 3f /* ty=float32 span=/transformer/h.3/mlp/act/Constant_1:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Pow:0:0 */;
  %1039 = multiply(%1038, 0.044715f /* ty=float32 span=/transformer/h.3/mlp/act/Constant_2:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Mul_1:0:0 */;
  %1040 = add(%1037, %1039) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Add:0:0 */;
  %1041 = multiply(%1040, 0.797885f /* ty=float32 span=/transformer/h.3/mlp/act/Constant_3:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Mul_2:0:0 */;
  %1042 = tanh(%1041) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Tanh:0:0 */;
  %1043 = multiply(%1037, 0.5f /* ty=float32 span=/transformer/h.3/mlp/act/Constant:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Mul:0:0 */;
  %1044 = add(%1042, 1f /* ty=float32 span=/transformer/h.3/mlp/act/Constant_4:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Add_1:0:0 */;
  %1045 = multiply(%1043, %1044) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/act/Mul_3:0:0 */;
  %1046 = shape_of(%1045, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_proj/Shape_2:0:0 */;
  %1047 = strided_slice(%1046, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_proj/Slice:0:0 */;
  %1048 = squeeze(%1047, axis=[0]) /* ty=int64 span=/transformer/h.3/mlp/c_proj/Squeeze:0:0 */;
  %1049 = expand_dims(%1048, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_proj/Unsqueeze:0:0 */;
  %1050 = (meta[relay.Constant][170] /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_proj/Constant_6:0:0 */, %1049) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/mlp/c_proj/Concat:0:0 */;
  %1051 = concatenate(%1050) /* ty=Tensor[(2), int64] span=/transformer/h.3/mlp/c_proj/Concat:0:0 */;
  %1052 = dyn.reshape(%1045, %1051, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.3/mlp/c_proj/Reshape:0:0 */;
  %1053 = nn.dense(%1052, meta[relay.Constant][171] /* ty=Tensor[(32, ?), float32] span=/transformer/h.3/mlp/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.3/mlp/c_proj/Gemm:0:0 */;
  %1054 = shape_of(%1045, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_proj/Shape:0:0 */;
  %1055 = take(%1054, 0i64 /* ty=int64 span=/transformer/h.3/mlp/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/mlp/c_proj/Gather:0:0 */;
  %1056 = shape_of(%1045, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_proj/Shape_1:0:0 */;
  %1057 = take(%1056, 1i64 /* ty=int64 span=/transformer/h.3/mlp/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.3/mlp/c_proj/Gather_1:0:0 */;
  %1058 = expand_dims(%1055, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_proj/Unsqueeze_1:0:0 */;
  %1059 = expand_dims(%1057, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_proj/Unsqueeze_2:0:0 */;
  %1060 = (%1058, %1059, meta[relay.Constant][173] /* ty=Tensor[(1), int64] span=/transformer/h.3/mlp/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.3/mlp/c_proj/Concat_1:0:0 */;
  %1061 = add(%1053, meta[relay.Constant][172] /* ty=Tensor[(32), float32] span=Identity_11:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.3/mlp/c_proj/Gemm:0:0 */;
  %1062 = concatenate(%1060) /* ty=Tensor[(3), int64] span=/transformer/h.3/mlp/c_proj/Concat_1:0:0 */;
  %1063 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.3/mlp/c_proj/Reshape_1:0:0 */;
  %1064 = add(%1010, %1063) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.3/Add_1:0:0 */;
  %1065 = mean(%1064, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_1/ReduceMean:0:0 */;
  %1066 = subtract(%1064, %1065) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_1/Sub:0:0 */;
  %1067 = power(%1066, 2f /* ty=float32 span=/transformer/h.4/ln_1/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_1/Pow:0:0 */;
  %1068 = mean(%1067, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_1/ReduceMean_1:0:0 */;
  %1069 = add(%1068, 1e-05f /* ty=float32 span=/transformer/h.4/ln_1/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_1/Add:0:0 */;
  %1070 = sqrt(%1069) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_1/Sqrt:0:0 */;
  %1071 = divide(%1066, %1070) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_1/Div:0:0 */;
  %1072 = multiply(%1071, meta[relay.Constant][174] /* ty=Tensor[(32), float32] span=Identity_10:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_1/Mul:0:0 */;
  %1073 = add(%1072, meta[relay.Constant][175] /* ty=Tensor[(32), float32] span=Identity_9:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_1/Add_1:0:0 */;
  %1074 = shape_of(%1073, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_attn/Shape_2:0:0 */;
  %1075 = strided_slice(%1074, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_attn/Slice:0:0 */;
  %1076 = squeeze(%1075, axis=[0]) /* ty=int64 span=/transformer/h.4/attn/c_attn/Squeeze:0:0 */;
  %1077 = expand_dims(%1076, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_attn/Unsqueeze:0:0 */;
  %1078 = (meta[relay.Constant][176] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_attn/Constant_6:0:0 */, %1077) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/c_attn/Concat:0:0 */;
  %1079 = concatenate(%1078) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/c_attn/Concat:0:0 */;
  %1080 = dyn.reshape(%1073, %1079, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.4/attn/c_attn/Reshape:0:0 */;
  %1081 = nn.dense(%1080, meta[relay.Constant][177] /* ty=Tensor[(96, ?), float32] span=/transformer/h.4/attn/c_attn/Gemm:0:0 */, units=96) /* ty=Tensor[(?, 96), float32] span=/transformer/h.4/attn/c_attn/Gemm:0:0 */;
  %1082 = shape_of(%1073, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_attn/Shape:0:0 */;
  %1083 = take(%1082, 0i64 /* ty=int64 span=/transformer/h.4/attn/c_attn/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/c_attn/Gather:0:0 */;
  %1084 = shape_of(%1073, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_attn/Shape_1:0:0 */;
  %1085 = take(%1084, 1i64 /* ty=int64 span=/transformer/h.4/attn/c_attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/c_attn/Gather_1:0:0 */;
  %1086 = expand_dims(%1083, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_attn/Unsqueeze_1:0:0 */;
  %1087 = expand_dims(%1085, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_attn/Unsqueeze_2:0:0 */;
  %1088 = (%1086, %1087, meta[relay.Constant][179] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_attn/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/c_attn/Concat_1:0:0 */;
  %1089 = add(%1081, meta[relay.Constant][178] /* ty=Tensor[(96), float32] span=Identity_7:0:0 */) /* ty=Tensor[(?, 96), float32] span=/transformer/h.4/attn/c_attn/Gemm:0:0 */;
  %1090 = concatenate(%1088) /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_attn/Concat_1:0:0 */;
  %1091 = dyn.reshape(%1089, %1090, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/c_attn/Reshape_1:0:0 */;
  %1092 = split(%1091, indices_or_sections=[32i64, 64i64], axis=2) /* ty=(Tensor[(?, ?, 32), float32], Tensor[(?, ?, 32), float32], Tensor[(?, ?, ?), float32]) span=/transformer/h.4/attn/Split:0:0 */;
  %1093 = %1092.1 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/attn/Split:0:0 */;
  %1094 = shape_of(%1093, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/Shape_2:0:0 */;
  %1095 = take(%1094, 0i64 /* ty=int64 span=/transformer/h.4/attn/Constant_5:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather_2:0:0 */;
  %1096 = shape_of(%1093, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/Shape_3:0:0 */;
  %1097 = take(%1096, 1i64 /* ty=int64 span=/transformer/h.4/attn/Constant_6:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather_3:0:0 */;
  %1098 = expand_dims(%1095, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_2:0:0 */;
  %1099 = expand_dims(%1097, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_3:0:0 */;
  %1100 = (%1098, %1099, meta[relay.Constant][180] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Constant_7:0:0 */, meta[relay.Constant][181] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Constant_8:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/Concat_1:0:0 */;
  %1101 = concatenate(%1100) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Concat_1:0:0 */;
  %1102 = dyn.reshape(%1093, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Reshape_1:0:0 */;
  %1103 = transpose(%1102, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Transpose_1:0:0 */;
  %1104 = shape_of(%1103, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Shape_8:0:0 */;
  %1105 = strided_slice(%1104, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Slice_2:0:0 */;
  %1106 = %1092.0 /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/attn/Split:0:0 */;
  %1107 = shape_of(%1106, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/Shape:0:0 */;
  %1108 = take(%1107, 0i64 /* ty=int64 span=/transformer/h.4/attn/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather:0:0 */;
  %1109 = shape_of(%1106, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/Shape_1:0:0 */;
  %1110 = take(%1109, 1i64 /* ty=int64 span=/transformer/h.4/attn/Constant_2:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather_1:0:0 */;
  %1111 = expand_dims(%1108, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze:0:0 */;
  %1112 = expand_dims(%1110, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_1:0:0 */;
  %1113 = (%1111, %1112, meta[relay.Constant][182] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Constant_3:0:0 */, meta[relay.Constant][183] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Constant_4:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/Concat:0:0 */;
  %1114 = concatenate(%1113) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Concat:0:0 */;
  %1115 = dyn.reshape(%1106, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Reshape:0:0 */;
  %1116 = transpose(%1115, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Transpose:0:0 */;
  %1117 = shape_of(%1116, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Shape_7:0:0 */;
  %1118 = strided_slice(%1117, begin=[-2i64], end=[-1i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Slice_1:0:0 */;
  %1119 = squeeze(%1105, axis=[0]) /* ty=int64 span=/transformer/h.4/attn/Squeeze_2:0:0 */;
  %1120 = squeeze(%1118, axis=[0]) /* ty=int64 span=/transformer/h.4/attn/Squeeze_1:0:0 */;
  %1121 = subtract(%1119, %1120) /* ty=int64 span=/transformer/h.4/attn/Sub:0:0 */;
  %1122 = expand_dims(%1121, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_6:0:0 */;
  %1123 = scatter_elements(meta[relay.Constant][1] /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */, meta[relay.Constant][2] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Slice_3:0:0 */, %1122) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1124 = cast_like(0 /* ty=int32 span=/transformer/h.4/attn/Slice_3:0:0 */, %1123) /* ty=int64 span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1125 = cast_like(meta[relay.Constant][184] /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_3:0:0 */, %1123) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1126 = slice_like(%1125, %1123, axes=None) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1127 = less(%1123, %1124) /* ty=Tensor[(4), bool] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1128 = add(%1123, %1126) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1129 = where(%1127, %1128, %1123) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1130 = greater_equal(%1129, %1126) /* ty=Tensor[(4), bool] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1131 = expand_dims(%1119, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_7:0:0 */;
  %1132 = where(%1130, %1126, %1129) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1133 = scatter_elements(meta[relay.Constant][185] /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */, meta[relay.Constant][2] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Slice_3:0:0 */, %1131) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1134 = dyn.strided_slice(meta[relay.Constant][0] /* ty=Tensor[(1, 1, 512, 512), uint8] span=Identity_8:0:0 */, %1132, %1133, meta[relay.Constant][186] /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_3:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.4/attn/Slice_3:0:0 */;
  %1135 = shape_of(%1134, dtype="int32") /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1136 = cast_like(%1135, meta[relay.Constant][188] /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1137 = slice_like(%1136, meta[relay.Constant][188] /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */, axes=None) /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1138 = add(meta[relay.Constant][188] /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */, %1137) /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1139 = where(meta[relay.Constant][187] /* ty=Tensor[(4), bool] span=/transformer/h.4/attn/Slice_4:0:0 */, %1138, meta[relay.Constant][188] /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */) /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1140 = greater_equal(%1139, %1137) /* ty=Tensor[(4), bool] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1141 = shape_of(%1134, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1142 = expand_dims(%1119, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_8:0:0 */;
  %1143 = where(%1140, %1137, %1139) /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1144 = scatter_elements(%1141, meta[relay.Constant][189] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Slice_4:0:0 */, %1142) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1145 = dyn.strided_slice(%1134, %1143, %1144, meta[relay.Constant][190] /* ty=Tensor[(4), int32] span=/transformer/h.4/attn/Slice_4:0:0 */, begin=None, end=None, strides=None, axes=None) /* ty=Tensor[(?, ?, ?, ?), uint8] span=/transformer/h.4/attn/Slice_4:0:0 */;
  %1146 = transpose(%1102, axes=[0, 2, 3, 1]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Transpose_3:0:0 */;
  %1147 = shape_of(%1146, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1148 = shape_of(%1116, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1149 = strided_slice(%1147, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1150 = strided_slice(%1148, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1151 = strided_slice(%1147, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1152 = strided_slice(%1148, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1153 = maximum(%1149, %1150) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1154 = maximum(%1151, %1152) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1155 = (%1153, %1154) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/MatMul:0:0 */;
  %1156 = concatenate(%1155) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1157 = strided_slice(%1148, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1158 = (%1156, %1157) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul:0:0 */;
  %1159 = concatenate(%1158) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1160 = dyn.broadcast_to(%1116, %1159, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1161 = shape_of(%1160, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1162 = strided_slice(%1161, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1163 = (meta[relay.Constant][191] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */, %1162) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul:0:0 */;
  %1164 = concatenate(%1163) /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1165 = strided_slice(%1147, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1166 = (%1156, %1165) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul:0:0 */;
  %1167 = concatenate(%1166) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1168 = dyn.broadcast_to(%1146, %1167, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1169 = shape_of(%1168, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1170 = strided_slice(%1169, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1171 = (meta[relay.Constant][192] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */, %1170) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul:0:0 */;
  %1172 = concatenate(%1171) /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1173 = dyn.reshape(%1168, %1172, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1174 = dyn.reshape(%1160, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1175 = transpose(%1173, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1176 = strided_slice(%1148, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1177 = strided_slice(%1147, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1178 = (%1156, %1176, %1177) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/MatMul:0:0 */;
  %1179 = nn.batch_matmul(%1174, %1175, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1180 = concatenate(%1178) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1181 = %1092.2 /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/Split:0:0 */;
  %1182 = shape_of(%1181, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/Shape_4:0:0 */;
  %1183 = take(%1182, 0i64 /* ty=int64 span=/transformer/h.4/attn/Constant_9:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather_4:0:0 */;
  %1184 = shape_of(%1181, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/Shape_5:0:0 */;
  %1185 = take(%1184, 1i64 /* ty=int64 span=/transformer/h.4/attn/Constant_10:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather_5:0:0 */;
  %1186 = expand_dims(%1183, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_4:0:0 */;
  %1187 = expand_dims(%1185, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_5:0:0 */;
  %1188 = (%1186, %1187, meta[relay.Constant][193] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Constant_11:0:0 */, meta[relay.Constant][194] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Constant_12:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/Concat_2:0:0 */;
  %1189 = concatenate(%1188) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Concat_2:0:0 */;
  %1190 = dyn.reshape(%1181, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Reshape_2:0:0 */;
  %1191 = transpose(%1190, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Transpose_2:0:0 */;
  %1192 = shape_of(%1191, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Shape_6:0:0 */;
  %1193 = strided_slice(%1192, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Slice:0:0 */;
  %1194 = squeeze(%1193, axis=[0]) /* ty=int64 span=/transformer/h.4/attn/Squeeze:0:0 */;
  %1195 = cast(%1194, dtype="float32") /* ty=float32 span=/transformer/h.4/attn/Cast:0:0 */;
  %1196 = power(%1195, 0.5f /* ty=float32 span=/transformer/h.4/attn/Constant_17:0:0 */) /* ty=float32 span=/transformer/h.4/attn/Pow:0:0 */;
  %1197 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/MatMul:0:0 */;
  %1198 = add(0f /* ty=float32 span=/transformer/h.4/attn/ConstantOfShape:0:0 */, %1196) /* ty=float32 span=/transformer/h.4/attn/Add:0:0 */;
  %1199 = cast(%1145, dtype="bool") /* ty=Tensor[(?, ?, ?, ?), bool] span=/transformer/h.4/attn/Cast_1:0:0 */;
  %1200 = divide(%1197, %1198) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Div:0:0 */;
  %1201 = where(%1199, %1200, -3.40282e+38f /* ty=float32 span=Constant_220:0:0 */) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Where:0:0 */;
  %1202 = add(%1201, %169) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Add_1:0:0 */;
  %1203 = nn.softmax(%1202, axis=3) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Softmax:0:0 */;
  %1204 = shape_of(%1191, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1205 = cast(%1203, dtype="float32") /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Cast_2:0:0 */;
  %1206 = shape_of(%1205, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1207 = strided_slice(%1204, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1208 = strided_slice(%1206, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1209 = strided_slice(%1204, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1210 = strided_slice(%1206, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1211 = maximum(%1207, %1208) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1212 = maximum(%1209, %1210) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1213 = (%1211, %1212) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1214 = concatenate(%1213) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1215 = strided_slice(%1206, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1216 = (%1214, %1215) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1217 = concatenate(%1216) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1218 = dyn.broadcast_to(%1205, %1217, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1219 = shape_of(%1218, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1220 = strided_slice(%1219, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1221 = (meta[relay.Constant][195] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */, %1220) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1222 = concatenate(%1221) /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1223 = strided_slice(%1204, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1224 = (%1214, %1223) /* ty=(Tensor[(2), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1225 = concatenate(%1224) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1226 = dyn.broadcast_to(%1191, %1225, shape=None) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1227 = shape_of(%1226, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1228 = strided_slice(%1227, begin=[2], end=[4], strides=[1], axes=None) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1229 = (meta[relay.Constant][196] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */, %1228) /* ty=(Tensor[(1), int64], Tensor[(2), int64]) span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1230 = concatenate(%1229) /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1231 = dyn.reshape(%1226, %1230, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1232 = dyn.reshape(%1218, %1222, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1233 = transpose(%1231, axes=[0, 2, 1]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1234 = strided_slice(%1206, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1235 = strided_slice(%1204, begin=[3], end=[4], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1236 = (%1214, %1234, %1235) /* ty=(Tensor[(2), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1237 = nn.batch_matmul(%1232, %1233, out_dtype="float32", transpose_b=True) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1238 = concatenate(%1236) /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1239 = dyn.reshape(%1237, %1238, newshape=[]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/MatMul_1:0:0 */;
  %1240 = transpose(%1239, axes=[0, 2, 1, 3]) /* ty=Tensor[(?, ?, ?, ?), float32] span=/transformer/h.4/attn/Transpose_4:0:0 */;
  %1241 = shape_of(%1240, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Shape_9:0:0 */;
  %1242 = take(%1241, 0i64 /* ty=int64 span=/transformer/h.4/attn/Constant_35:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather_6:0:0 */;
  %1243 = shape_of(%1240, dtype="int64") /* ty=Tensor[(4), int64] span=/transformer/h.4/attn/Shape_10:0:0 */;
  %1244 = take(%1243, 1i64 /* ty=int64 span=/transformer/h.4/attn/Constant_36:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/Gather_7:0:0 */;
  %1245 = expand_dims(%1242, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_9:0:0 */;
  %1246 = expand_dims(%1244, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Unsqueeze_10:0:0 */;
  %1247 = (%1245, %1246, meta[relay.Constant][197] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/Constant_37:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/Concat_3:0:0 */;
  %1248 = concatenate(%1247) /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/Concat_3:0:0 */;
  %1249 = dyn.reshape(%1240, %1248, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/Reshape_3:0:0 */;
  %1250 = shape_of(%1249, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_proj/Shape_2:0:0 */;
  %1251 = strided_slice(%1250, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_proj/Slice:0:0 */;
  %1252 = squeeze(%1251, axis=[0]) /* ty=int64 span=/transformer/h.4/attn/c_proj/Squeeze:0:0 */;
  %1253 = expand_dims(%1252, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_proj/Unsqueeze:0:0 */;
  %1254 = (meta[relay.Constant][198] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_proj/Constant_6:0:0 */, %1253) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/c_proj/Concat:0:0 */;
  %1255 = concatenate(%1254) /* ty=Tensor[(2), int64] span=/transformer/h.4/attn/c_proj/Concat:0:0 */;
  %1256 = dyn.reshape(%1249, %1255, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.4/attn/c_proj/Reshape:0:0 */;
  %1257 = nn.dense(%1256, meta[relay.Constant][199] /* ty=Tensor[(32, ?), float32] span=/transformer/h.4/attn/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.4/attn/c_proj/Gemm:0:0 */;
  %1258 = shape_of(%1249, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_proj/Shape:0:0 */;
  %1259 = take(%1258, 0i64 /* ty=int64 span=/transformer/h.4/attn/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/c_proj/Gather:0:0 */;
  %1260 = shape_of(%1249, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_proj/Shape_1:0:0 */;
  %1261 = take(%1260, 1i64 /* ty=int64 span=/transformer/h.4/attn/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/attn/c_proj/Gather_1:0:0 */;
  %1262 = expand_dims(%1259, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_proj/Unsqueeze_1:0:0 */;
  %1263 = expand_dims(%1261, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_proj/Unsqueeze_2:0:0 */;
  %1264 = (%1262, %1263, meta[relay.Constant][201] /* ty=Tensor[(1), int64] span=/transformer/h.4/attn/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/attn/c_proj/Concat_1:0:0 */;
  %1265 = add(%1257, meta[relay.Constant][200] /* ty=Tensor[(32), float32] span=Identity_6:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.4/attn/c_proj/Gemm:0:0 */;
  %1266 = concatenate(%1264) /* ty=Tensor[(3), int64] span=/transformer/h.4/attn/c_proj/Concat_1:0:0 */;
  %1267 = dyn.reshape(%1265, %1266, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/attn/c_proj/Reshape_1:0:0 */;
  %1268 = add(%1267, %1064) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/Add:0:0 */;
  %1269 = mean(%1268, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_2/ReduceMean:0:0 */;
  %1270 = subtract(%1268, %1269) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_2/Sub:0:0 */;
  %1271 = power(%1270, 2f /* ty=float32 span=/transformer/h.4/ln_2/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_2/Pow:0:0 */;
  %1272 = mean(%1271, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_2/ReduceMean_1:0:0 */;
  %1273 = add(%1272, 1e-05f /* ty=float32 span=/transformer/h.4/ln_2/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_2/Add:0:0 */;
  %1274 = sqrt(%1273) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/h.4/ln_2/Sqrt:0:0 */;
  %1275 = divide(%1270, %1274) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_2/Div:0:0 */;
  %1276 = multiply(%1275, meta[relay.Constant][202] /* ty=Tensor[(32), float32] span=Identity_5:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_2/Mul:0:0 */;
  %1277 = add(%1276, meta[relay.Constant][203] /* ty=Tensor[(32), float32] span=Identity_4:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/ln_2/Add_1:0:0 */;
  %1278 = shape_of(%1277, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_fc/Shape_2:0:0 */;
  %1279 = strided_slice(%1278, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_fc/Slice:0:0 */;
  %1280 = squeeze(%1279, axis=[0]) /* ty=int64 span=/transformer/h.4/mlp/c_fc/Squeeze:0:0 */;
  %1281 = expand_dims(%1280, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_fc/Unsqueeze:0:0 */;
  %1282 = (meta[relay.Constant][204] /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_fc/Constant_6:0:0 */, %1281) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/mlp/c_fc/Concat:0:0 */;
  %1283 = concatenate(%1282) /* ty=Tensor[(2), int64] span=/transformer/h.4/mlp/c_fc/Concat:0:0 */;
  %1284 = dyn.reshape(%1277, %1283, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.4/mlp/c_fc/Reshape:0:0 */;
  %1285 = nn.dense(%1284, meta[relay.Constant][205] /* ty=Tensor[(128, ?), float32] span=/transformer/h.4/mlp/c_fc/Gemm:0:0 */, units=128) /* ty=Tensor[(?, 128), float32] span=/transformer/h.4/mlp/c_fc/Gemm:0:0 */;
  %1286 = shape_of(%1277, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_fc/Shape:0:0 */;
  %1287 = take(%1286, 0i64 /* ty=int64 span=/transformer/h.4/mlp/c_fc/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/mlp/c_fc/Gather:0:0 */;
  %1288 = shape_of(%1277, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_fc/Shape_1:0:0 */;
  %1289 = take(%1288, 1i64 /* ty=int64 span=/transformer/h.4/mlp/c_fc/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/mlp/c_fc/Gather_1:0:0 */;
  %1290 = expand_dims(%1287, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_fc/Unsqueeze_1:0:0 */;
  %1291 = expand_dims(%1289, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_fc/Unsqueeze_2:0:0 */;
  %1292 = (%1290, %1291, meta[relay.Constant][207] /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_fc/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/mlp/c_fc/Concat_1:0:0 */;
  %1293 = add(%1285, meta[relay.Constant][206] /* ty=Tensor[(128), float32] span=Identity_3:0:0 */) /* ty=Tensor[(?, 128), float32] span=/transformer/h.4/mlp/c_fc/Gemm:0:0 */;
  %1294 = concatenate(%1292) /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_fc/Concat_1:0:0 */;
  %1295 = dyn.reshape(%1293, %1294, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/c_fc/Reshape_1:0:0 */;
  %1296 = power(%1295, 3f /* ty=float32 span=/transformer/h.4/mlp/act/Constant_1:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Pow:0:0 */;
  %1297 = multiply(%1296, 0.044715f /* ty=float32 span=/transformer/h.4/mlp/act/Constant_2:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Mul_1:0:0 */;
  %1298 = add(%1295, %1297) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Add:0:0 */;
  %1299 = multiply(%1298, 0.797885f /* ty=float32 span=/transformer/h.4/mlp/act/Constant_3:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Mul_2:0:0 */;
  %1300 = tanh(%1299) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Tanh:0:0 */;
  %1301 = multiply(%1295, 0.5f /* ty=float32 span=/transformer/h.4/mlp/act/Constant:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Mul:0:0 */;
  %1302 = add(%1300, 1f /* ty=float32 span=/transformer/h.4/mlp/act/Constant_4:0:0 */) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Add_1:0:0 */;
  %1303 = multiply(%1301, %1302) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/act/Mul_3:0:0 */;
  %1304 = shape_of(%1303, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_proj/Shape_2:0:0 */;
  %1305 = strided_slice(%1304, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_proj/Slice:0:0 */;
  %1306 = squeeze(%1305, axis=[0]) /* ty=int64 span=/transformer/h.4/mlp/c_proj/Squeeze:0:0 */;
  %1307 = expand_dims(%1306, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_proj/Unsqueeze:0:0 */;
  %1308 = (meta[relay.Constant][208] /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_proj/Constant_6:0:0 */, %1307) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/mlp/c_proj/Concat:0:0 */;
  %1309 = concatenate(%1308) /* ty=Tensor[(2), int64] span=/transformer/h.4/mlp/c_proj/Concat:0:0 */;
  %1310 = dyn.reshape(%1303, %1309, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/transformer/h.4/mlp/c_proj/Reshape:0:0 */;
  %1311 = nn.dense(%1310, meta[relay.Constant][209] /* ty=Tensor[(32, ?), float32] span=/transformer/h.4/mlp/c_proj/Gemm:0:0 */, units=32) /* ty=Tensor[(?, 32), float32] span=/transformer/h.4/mlp/c_proj/Gemm:0:0 */;
  %1312 = shape_of(%1303, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_proj/Shape:0:0 */;
  %1313 = take(%1312, 0i64 /* ty=int64 span=/transformer/h.4/mlp/c_proj/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/mlp/c_proj/Gather:0:0 */;
  %1314 = shape_of(%1303, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_proj/Shape_1:0:0 */;
  %1315 = take(%1314, 1i64 /* ty=int64 span=/transformer/h.4/mlp/c_proj/Constant_1:0:0 */, axis=0) /* ty=int64 span=/transformer/h.4/mlp/c_proj/Gather_1:0:0 */;
  %1316 = expand_dims(%1313, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_proj/Unsqueeze_1:0:0 */;
  %1317 = expand_dims(%1315, axis=0) /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_proj/Unsqueeze_2:0:0 */;
  %1318 = (%1316, %1317, meta[relay.Constant][211] /* ty=Tensor[(1), int64] span=/transformer/h.4/mlp/c_proj/Constant_7:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/h.4/mlp/c_proj/Concat_1:0:0 */;
  %1319 = add(%1311, meta[relay.Constant][210] /* ty=Tensor[(32), float32] span=Identity_2:0:0 */) /* ty=Tensor[(?, 32), float32] span=/transformer/h.4/mlp/c_proj/Gemm:0:0 */;
  %1320 = concatenate(%1318) /* ty=Tensor[(3), int64] span=/transformer/h.4/mlp/c_proj/Concat_1:0:0 */;
  %1321 = dyn.reshape(%1319, %1320, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/h.4/mlp/c_proj/Reshape_1:0:0 */;
  %1322 = add(%1268, %1321) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/h.4/Add_1:0:0 */;
  %1323 = mean(%1322, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/ln_f/ReduceMean:0:0 */;
  %1324 = subtract(%1322, %1323) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/ln_f/Sub:0:0 */;
  %1325 = power(%1324, 2f /* ty=float32 span=/transformer/ln_f/Constant:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/ln_f/Pow:0:0 */;
  %1326 = mean(%1325, axis=[-1], keepdims=True) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/ln_f/ReduceMean_1:0:0 */;
  %1327 = add(%1326, 1e-05f /* ty=float32 span=/transformer/ln_f/Constant_1:0:0 */) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/ln_f/Add:0:0 */;
  %1328 = sqrt(%1327) /* ty=Tensor[(?, ?, 1), float32] span=/transformer/ln_f/Sqrt:0:0 */;
  %1329 = divide(%1324, %1328) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/ln_f/Div:0:0 */;
  %1330 = multiply(%1329, meta[relay.Constant][212] /* ty=Tensor[(32), float32] span=Identity_1:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/ln_f/Mul:0:0 */;
  %1331 = shape_of(%input_ids, dtype="int64") /* ty=Tensor[(2), int64] span=/transformer/Shape:0:0 */;
  %1332 = take(%1331, 0i64 /* ty=int64 span=/transformer/Constant:0:0 */, axis=0) /* ty=int64 span=/transformer/Gather:0:0 */;
  %1333 = shape_of(%21, dtype="int64") /* ty=Tensor[(3), int64] span=/transformer/Shape_3:0:0 */;
  %1334 = strided_slice(%1333, begin=[-1i64], end=[9223372036854775807i64], strides=[1i64], axes=[0i64]) /* ty=Tensor[(1), int64] span=/transformer/Slice:0:0 */;
  %1335 = squeeze(%1334, axis=[0]) /* ty=int64 span=/transformer/Squeeze:0:0 */;
  %1336 = expand_dims(%1332, axis=0) /* ty=Tensor[(1), int64] span=/transformer/Unsqueeze_6:0:0 */;
  %1337 = expand_dims(%1, axis=0) /* ty=Tensor[(1), int64] span=/transformer/Unsqueeze_7:0:0 */;
  %1338 = expand_dims(%1335, axis=0) /* ty=Tensor[(1), int64] span=/transformer/Unsqueeze_8:0:0 */;
  %1339 = (%1336, %1337, %1338) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/transformer/Concat_3:0:0 */;
  %1340 = add(%1330, meta[relay.Constant][213] /* ty=Tensor[(32), float32] span=Identity_0:0:0 */) /* ty=Tensor[(?, ?, 32), float32] span=/transformer/ln_f/Add_1:0:0 */;
  %1341 = concatenate(%1339) /* ty=Tensor[(3), int64] span=/transformer/Concat_3:0:0 */;
  %1342 = dyn.reshape(%1340, %1341, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/transformer/Reshape_3:0:0 */;
  %1343 = shape_of(%1342, dtype="int64") /* ty=Tensor[(3), int64] span=/lm_head/MatMul:0:0 */;
  %1344 = strided_slice(%1343, begin=[2], end=[3], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */;
  %1345 = (meta[relay.Constant][214] /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */, %1344) /* ty=(Tensor[(1), int64], Tensor[(1), int64]) span=/lm_head/MatMul:0:0 */;
  %1346 = concatenate(%1345) /* ty=Tensor[(2), int64] span=/lm_head/MatMul:0:0 */;
  %1347 = dyn.reshape(%1342, %1346, newshape=[]) /* ty=Tensor[(?, ?), float32] span=/lm_head/MatMul:0:0 */;
  %1348 = strided_slice(%1343, begin=[0], end=[1], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */;
  %1349 = maximum(meta[relay.Constant][216] /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */, %1348) /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */;
  %1350 = (%1349,) /* ty=(Tensor[(1), int64],) span=/lm_head/MatMul:0:0 */;
  %1351 = concatenate(%1350) /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */;
  %1352 = strided_slice(%1343, begin=[1], end=[2], strides=[1], axes=None) /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */;
  %1353 = (%1351, %1352, meta[relay.Constant][217] /* ty=Tensor[(1), int64] span=/lm_head/MatMul:0:0 */) /* ty=(Tensor[(1), int64], Tensor[(1), int64], Tensor[(1), int64]) span=/lm_head/MatMul:0:0 */;
  %1354 = nn.dense(%1347, meta[relay.Constant][215] /* ty=Tensor[(1000, 32), float32] span=/lm_head/MatMul:0:0 */, units=None, out_dtype="float32") /* ty=Tensor[(?, 1000), float32] span=/lm_head/MatMul:0:0 */;
  %1355 = concatenate(%1353) /* ty=Tensor[(3), int64] span=/lm_head/MatMul:0:0 */;
  %1356 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] span=/lm_head/MatMul:0:0 */;
  (%1356, %60, %148, %329, %417, %587, %675, %845, %933, %1103, %1191) /* ty=(Tensor[(?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32], Tensor[(?, ?, ?, ?), float32]) */
}

, {}]